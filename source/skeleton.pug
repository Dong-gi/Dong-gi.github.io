-
    if (!String.prototype.hashCode)
        String.prototype.hashCode = function () {
            if (this.myHash)
                return this.myHash;
            if(this.length == 0)
                return this.myHash = 0;
            let hash = 0;
            for(let i = 0; i < this.length; i++) {
                hash = (hash << 5) - hash + this.charCodeAt(i);
                hash |= 0; // 32 bit 제한을 위해
            }
            return this.myHash = hash;
        }

mixin asA(href, text)
    -
        if (!text) {
            text = href.replace(/\/$/, '').replace(/^.+\//, '');
            if (/#/.test(href) == false)
                text = text.replace(/\..+$/, '');
        }
    +w3a()&attributes({ href: href })&attributes(attributes)= text

mixin asCode(lan, title)
    - lan = lan || 'text'
    - title = title || lan
    p: strong
        |↓
        = title
    .as-code.code-div.w3-leftbar.w3-border-green(lan=lan)
        if block
            block

//-
    options = {
        path: string,
        lan: string,
        displayRange: string | Array<int>,
        title: string
    }
mixin codeBtn(options)
    -
        if (arguments.length > 1 || typeof arguments[0] == 'string') {
            options = {
                path: arguments[0],
                lan: arguments[1],
                displayRange: arguments[2]
            }
        }
        let attr = {
            class: 'btn-code',
            title: options.path,
            displayRange: Array.isArray(options.displayRange) ? JSON.stringify(options.displayRange) : options.displayRange,
            lan: options.lan || 'text'
        }
    +w3button()&attributes(attr)&attributes(attributes)
        if block
            block
        else if (options.title)
            = options.title
        else
            = options.path.split('/').pop()

mixin goto(name, post)
    +asA(`${post || ''}#pos${name.hashCode()}`, `${name}`).goto&attributes({ target: post ? '_blank' : '_self' })

mixin hoverTemplate()
    div.w3-container.w3-leftbar.w3-border-green.w3-white.hover-template&attributes(attributes)
        if block
            block

mixin pos(name)
    span(id=`pos${name.hashCode()}`, style='padding:0!important;margin:0!important;width:0!important;height:0!important;overflow:hidden!important')

//-
    options = {
        title: string,
        keywords: string,   <- Removed
        description: string,
        useMath: boolean,
    }
mixin post(options)
    -
        if (arguments.length == 1 && typeof arguments[0] === 'string')
            options = { title: arguments[0] }
        else if (arguments.length > 1)
            options = {
                title: arguments[0],
                description: arguments[2],
                useMath: arguments[3],
            }
    doctype html
    html(lang='ko-KR')
        head
            meta(charset='UTF-8')
            meta(name='viewport', content='width=device-width, initial-scale=1')
            meta(name='google-site-verification', content='aH-DyzdytYQ0NPHNQFcs5dVoiu5YNs6CEEHYgqDmAFM')
            meta(name='author', content='Donggi Kim <hi.donggi@gmail.com>')
            meta(name='description', content=options.description)

            title= options.title

            link(rel="icon", href="/imgs/favicon.png")
            link(rel="stylesheet", href="/source/default.css")

            script window.wizFuncQueue = [];
        body
            .w3-bar-block.w3-sidebar.w3-animate-left#sidebar
                hr
                a.w3-bar-item.w3-button(href='javascript:closeSidebar();') Close &times;
                hr
                #marker-list
                hr
                #post-list
                hr
                details(open='open').w3-small.file-list
                    summary LICENSE
                    ul
                        li &copy; <a href="mailto:hi.donggi@gmail.com">Donggi Kim</a> →
                            +asA('https://github.com/Dong-gi/Dong-gi.github.io/blob/master/LICENSE', 'MIT License')
                        li
                            +asA('https://www.w3schools.com/w3css')
                            |  → No license
                        li
                            +asA('https://highlightjs.org/', 'highlight.js')
                            |  →
                            +asA('https://github.com/highlightjs/highlight.js/blob/main/LICENSE', 'BSD-3-Clause License')
                        li
                            +asA('https://github.com/mathjax/MathJax')
                            |  →
                            +asA('https://github.com/mathjax/MathJax/blob/master/LICENSE', 'Apache License 2.0')
                        li
                            +asA('https://github.com/davidshimjs/qrcodejs')
                            |  →
                            +asA('https://github.com/davidshimjs/qrcodejs/blob/master/LICENSE', 'MIT License')
                hr
            article#main
                .w3-bar.w3-blue.w3-large#nav(style='position:-webkit-sticky;position:sticky;top:0px;vertical-align:middle')
                    button.w3-bar-item.w3-button.w3-hover-theme(onclick='toggleSidebar()') &#9776;
                    input.w3-bar-item#query(type='text',placeholder='search',style='max-width:35%')
                    a.w3-bar-item.w3-button.w3-hover-theme(href='/') Home
                #contents.w3-padding
                    if block
                        block
            hr
            script#google-analytics(src='https://www.googletagmanager.com/gtag/js?id=UA-143098403-1', async)
            script.
                window.dataLayer = window.dataLayer || [];
                function gtag(){dataLayer.push(arguments);}
                gtag('js', new Date());
                gtag('config', 'UA-143098403-1');
            if options.useMath
                script#MathJax-script(src='/source/tex-chtml.js', async)
                script MathJax={tex:{tags:'ams',inlineMath:[['식[', ']식']]}};
            script#highlight-js(src="/source/highlight.pack.js", defer)
            script#default-js(src='/source/default.min.js', defer)


mixin tds(...cells)
    tr&attributes(attributes)
        each content, idx in cells
            td= content

mixin ths(...cells)
    tr&attributes(attributes)
        each content, idx in cells
            th= content

mixin w3a(color)
    if color
        a.w3-btn.w3-round-xxlarge.w3-small(class=color)&attributes(attributes)
            if block
                block
    else
        a.w3-btn.w3-round-xxlarge.w3-small.w3-green&attributes(attributes)
            if block
                block

mixin w3button(color)
    if color
        button.w3-btn.w3-round-xxlarge.w3-small(class=color)&attributes(attributes)
            if block
                block
    else
        button.w3-btn.w3-round-xxlarge.w3-small.w3-teal&attributes(attributes)
            if block
                block

mixin w3img(src, alt)
    .w3-center.w3-margin-bottom
        img.w3-round(src=src, title=alt, alt=alt, loading='lazy')&attributes(attributes)
        - if (alt && alt.length > 0)
            br
            strong
                |&lt;
                = alt
                |>
