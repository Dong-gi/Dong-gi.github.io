html
    body
        script(src='/source/redirect.js?200226_1657')
        hr
        details
            summary interface Closeable extends AutoCloseable Since 1.5
            |     
            ol
                li 데이터의 출발지나 목적지를 닫을 수 있으면 Closeable하다.
                |         
                li void close()
                |         스트림 및 이와 관련된 시스템 자원을 해제한다. 이미 호출되었다면 아무 일도 하지 않는다.
                br
                |         close() 실패했을 때, 예외를 던지는 대신 사용하던 자원을 모두 포기하고 Closeable 객체 내부적으로 '닫혔다(closed)'고 마크하길 권장한다.
        hr
        details
            summary interface Flushable Since 1.5
            |     
            ol
                li Flush할 수 있는 데이터 목적지는 Flushable하다.
                |         
                li void flush()
                |         버퍼에 저장된 데이터를 스트림에 모두 써 보낸다.
        hr
        details
            summary final class Console implements Flushable Since 1.6
            |     
            ol
                li
                    | JVM이 컨트롤할 수 있는 문자 기반 콘솔에 대한 접근 제공. 콘솔 존재 여부는 하위 플랫폼에 의존적이며, 싱글톤으로 System.console()을 통해 얻을 수 있다. 만일 가용한 콘솔이 없다면 null이 넘겨진다.
                    button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/ConsoleExample.java', lan='java') 예시 코드 »
                |         
                li 콘솔에 대한 읽기/쓰기 작업은 모두 원자 단위로 이루어지며, 따라서 다른 스레드가 대기할 가능성이 있다.
                |         
                li 콘솔에 대한 close()는 실제로 아무런 영향을 미치지 않는다.
                |         
                li 유닉스의 Ctrl+D, 윈도우의 Ctrl+Z와 같은 종료 문자를 만나면 읽기 메서드는 null을 반환한다.
                |         
                li
                    | 보안 유의 : 패스워드와 같은 중요한 데이터를 읽어들일 때, readPassword(), readPassword(String, Object...) 메서드를 이용하고, 반환된 char[]를 수동으로 0 초기화한다.
            |     
            details
                summary Method Detail
                |         
                ol
                    li PrintWriter writer() : 유니크한 PrintWriter 객체 반환
                    |             
                    li Reader reader() : 유니크한 Reader 객체 반환
                    |             
                    li Console format(String fmt, Object... args)
                    |             
                    li Console printf(String format, Object... args)
                    |             
                    li String readLine(String fmt, Object... args)
                    |             
                    li String readLine()
                    |             
                    li char[] readPassword(String fmt, Object... args)
                    |             
                    li char[] readPassword()
        hr
        details
            summary 바이트 단위 IO 관련
            |     
            details
                summary interface DataInput Since 1.0
                |         
                ol
                    li binary stream으로부터 바이트들을 읽고, 또 이를 자바 기본 타입 또는 String으로 만들어 반환하는 기능을 제공한다.
                    |             
                    li 읽기는 1바이트 단위로 이루어진다.
                    |             
                    li Modified UTF-8 : DataInput과 DataOutput 인터페이스는 수정된 UTF-8을 이용한다.
                    |             
                    ul
                        li '\u0001' ~ '\u007F'는 1바이트(0???????)로 표현한다.
                        |                 
                        li null('\u0000'), '\u0080' ~ '\u07FF'는 2바이트(110????? 10??????)로 표현한다.
                        |                 
                        li '\u0800' ~ '\uFFFF'는 3바이트(1110??? 10?????? 10??????)로 표현한다.
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li
                            | void readFully(byte[] b) == readFully(b, 0, b.length)
                            br
                            |                     void readFully(byte[] b, int off, int len)
                        |                 len만큼의 바이트를 읽어와 b의 off번째 바이트부터 저장한다.
                        |                 
                        li int skipBytes(int n)
                        |                 입력 스트림의 n바이트를 무시한다. 실제로 무시한 바이트 길이가 반환된다.
                        |                 
                        li String readLine()
                        |                 
                        ul
                            li 줄의 끝이나 파일 끝을 만나기까지의 문자열을 반환한다.
                            |                     
                            li 각 바이트들을 0 패딩하여 char로 변환하므로, 유니코드를 읽기는 부적합하다.
                            |                     
                            li 아무것도 읽지 못한 경우, 빈 문자열이 아닌 null이 반환된다.
                        |                 
                        li String readUTF()
                        |                 
                        ul
                            li 먼저 readUnsignedShort()와 같은 방법으로 2개 바이트를 읽어와 UTF 길이를 구한다.
                            |                     
                            li 구한 길이만큼의 바이트를 읽으면서 상기한 Modified UTF-8에 맞춰 String을 만든다.
                            |                     
                            li 길이만큼의 바이트를 다 읽기 전에 EOF를 만나면 예외를 던진다.
                    |             
                    details
                        summary 기본 자료형 읽기
                        |                 
                        ol
                            li boolean readBoolean()
                            |                     readByte() != 0 // 1바이트를 읽어 0이면 false, 그 외엔 true 반환
                            |                     
                            li byte readByte()
                            |                     1바이트를 읽어 그대로 반환
                            |                     
                            li int readUnsignedByte()
                            |                     1바이트를 읽어 int로 반환
                            |                     
                            li short readShort()
                            |                     1바이트씩 순서대로 읽은 a, b에 대하여 (short)((a << 8) | (b & 0xff)) 반환
                            |                     
                            li int readUnsignedShort()
                            |                     ((a & 0xff) << 8) | (b & 0xff)
                            |                     
                            li 생략
                            |                     
                            li float readFloat()
                            |                     readInt()한 비트 순서 그대로 float으로 변환하여 반환
                            |                     
                            li double readDouble()
                            |                     readLong()한 비트 순서 그대로 double로 변환하여 반환
            |     
            details
                summary interface DataOutput Since 1.0
                |         
                ol
                    li DataInput과 대칭
                    |             
                    li void write(int b)
                    |             하위 8개 비트만 스트림에 쓴다. 나머지는 무시한다.
                    |             
                    li void writeBoolean(boolean v)
                    |             true면 write(1), false면 write(0)
                    |             
                    li void writeShort(int v)
                    |             다음 순으로 2개 바이트를 쓴다. (byte)(0xff & (v >> 8)), (byte)(0xff & v)
                    |             
                    li void writeBytes(String s)
                    |             s의 각 글자의 하위 8개 비트만 쓴다.
                    |             
                    li void writeChars(String s)
                    |             s의 각 글자를 쓴다.
                    |             
                    li void writeUTF(String s)
                    |             Modified UTF-8을 이용하여 저장한다. 총 길이 정보를 2바이트로 먼저 기록한다.
            |     
            details
                summary abstract class InputStream implements Closeable Since 1.0
                |         
                ol
                    li 바이트 단위 읽기에 대한 최상위 추상 클래스
                    |             
                    li 작업이 끝날 때까지 스레드가 블록되며, 스트림이 비동기적으로 닫히거나, 인터럽트가 발생하는 경우에 대해 대처하지 않는다.
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li static InputStream nullInputStream() Since 11
                        |                 아무것도 읽지 않는 InputStream을 반환한다. 반환된 스트림은 처음부터 열려 있고, 마치 스트림의 끝에 도달한 것처럼 작동한다. 일반 InputSteram과 마찬가지로 close()를 통해 닫는다.
                        |                 
                        li long transferTo(OutputStream out) Since 9
                        |                 입력 스트림의 모든 바이트를 읽어들여 out에 쓴다. 총 전송 바이트 수를 반환하며, 스트림을 닫는 작업을 하진 않는다.
                        |                 
                        li abstract int read()
                        |                 다음 바이트를 읽고 int로 반환한다. 스트림 끝인 경우 -1을 반환한다. 스트림이 끝나거나, 예외가 발생하거나, 읽을 데이터가 준비될 때까지 스레드를 블록한다.
                        |                 
                        li int read(byte[] b, int off, int len) + 1 오버로딩
                        |                 실제로 읽은 바이트 수를 반환한다. 스트림 끝인 경우 -1을 반환한다. 스레드를 블록한다.
                        |                 
                        li byte[] readAllBytes() Since 9
                        |                 
                        li byte[] readNBytes(int len) Since 11
                        |                 
                        li long skip(long n)
                        |                 실제로 건너뛴 바이트 수를 반환. 음수 매개변수에 대해 0을 반환한다. 서브클래스들의 구현은 이와 다를 수 있다.
                        |                 
                        li int available()
                        |                 막힘 없이 한 번에 읽어올 수 있는 바이트 수 예상값을 반환. InputStream 구현에 따라 전체 바이트 수를 반환하기도, 그렇지 않기도 하다. InputStream 자체는 항상 0을 반환하며, 서브클래스에서 재정의해야 한다.
                    |             
                    details
                        summary 마킹 관련
                        |                 
                        ol
                            li boolean markSupported()
                            |                     mark, reset 메서드를 지원하는지 여부 반환. 기본 false
                            |                     
                            li void mark(int readlimit)
                            |                     현재 위치 마킹
                            |                     
                            li void reset()
                            |                     마지막 마킹 위치로 이동
            |     
            details
                summary abstract class OutputStream implements Closeable, Flushable Since 1.0
                |         
                ol
                    li 바이트 단위 쓰기에 대한 최상위 추상 클래스
                    |             
                    li static OutputStream nullOutputStream() Since 11
                    |             실제로 데이터를 쓰지는 않는 OutputStream 객체를 반환한다.
                    |             
                    li abstract void write(int b)
                    |             하위 8개 비트만 쓰고 나머지는 무시한다.
                    |             
                    li void write(byte[] b, int off, int len) + 1 오버로딩
            |     
            details
                summary class FilterInputStream extends InputStream Since 1.0
                |         다른 InputStream에 대한 필터 장식자 정의 클래스로, 추가적인 메서드는 없다.
            |     
            details
                summary class FilterOutputStream extends OutputStream Since 1.0
                |         다른 OutputStream에 대한 필터 장식자 정의 클래스로, 추가적인 메서드는 없다.
            |     
            details
                summary class ByteArrayInputStream extends InputStream Since 1.0
                |         
                ol
                    li 내부 버퍼 byte[] buf에 대한 읽기 연산을 지원하는 InputStream
                    |             
                    li public ByteArrayInputStream(byte[] buf, int offset, int length) + 1 오버로딩
            |     
            details
                summary class ByteArrayOutputStream extends OutputStream Since 1.0
                |         
                ol
                    li 내부 버퍼 byte[] buf에 대해 쓰기 연산을 지원하는 OutputStream. 버퍼 크기는 자동으로 확장된다.
                    |             
                    li public ByteArrayOutputStream(int size) + 1 오버로딩
                    |             
                    li void writeBytes(byte[] b) since 11 == write(b, 0, b.length)
                    |             
                    li void writeTo(OutputStream out)
                    |             버퍼를 out에 모두 쓴다. == out.write(buf, 0, count)
                    |             
                    li byte[] toByteArray()
                    |             buf 복사본 반환.
                    |             
                    li void reset()
                    |             지금까지 쓴 것을 무시하고 처음부터 재활용.
                    |             
                    li int size()
                    |             
                    li String toString(String charsetName) Since 1.1 + 1 오버로딩
            |     
            details
                summary class BufferedInputStream extends FilterInputStream Since 1.0
                |         
                ol
                    li 다른 입력 스트림에 대해 버퍼를 제공함으로써 mark와 reset이 가능하게 해준다. 추가적인 특별한 메서드는 없다.
                    |             
                    li protected byte[] buf
                    |             
                    li protected int count
                    |             마지막 유효 바이트 인덱스 + 1
                    |             
                    li protected int marklimit, markpos, pos
                    |             |pos - markpos| < marklimit면 markpos는 -1(기본값)이 된다.
                    |             
                    li public BufferedInputStream(InputStream in, int size) : size는 버퍼 크기. + 1 오버로딩
            |     
            details
                summary class BufferedOutputStream extends FilterOutputStream Since 1.0
                |         
                ol
                    li 다른 출력 스트림에 대해 버퍼를 제공하여, 시스템 쓰기 작업이 빈번하게 일어나지 않게 해준다. 추가적인 특별한 메서드는 없다.
                    |             
                    li protected byte[] buf
                    |             
                    li protected int count : buf 내부의 유효한 바이트 수
                    |             
                    li public BufferedOutputStream(OutputStream out, int size) + 1 오버로딩
            |     
            details
                summary class DataInputStream extends FilterInputStream implements DataInput Since 1.0
                |         
                ol
                    li 플랫폼 독립적인 자바 기본 타입 읽기를 정의한 DataInput을 구현한 장식자 클래스(FilterInputStream).
                    |             
                    li public DataInputStream(InputStream in)
                    |             
                    li static final String readUTF(DataInput in)
                    |             Modified UTF-8을 이용하여 in 스트림으로부터 String을 해석해 반환한다.
            |     
            details
                summary
                    | class DataOutputStream extends FilterOutputStream implements DataOutput Since 1.0
                |         
                ol
                    li 플랫폼 독립적인 자바 기본 타입 쓰기를 정의한 DataOutput을 구현한 장식자 클래스(FilterOutputStream)
                    |             
                    li protected int written
                    |             현재까지 쓴 바이트 수. 오버플로될 경우 Integer.MAX_VALUE로 설정된다.
                    |             
                    li public DataOutputStream(OutputStream out)
                    |             
                    li final int size() == return written;
            |     
            details
                summary
                    | class PrintStream extends FilterOutputStream implements Appendable, Closeable Since 1.0
                |         
                ol
                    li OutputStream에 기본 타입 및 각종 문자열을 쓰는 기능을 제공한다.
                |         
                details
                    summary Constructor Detail
                    |             
                    ol
                        li public PrintStream(OutputStream out, boolean autoFlush) + 1 오버로딩
                        |                 바이트 배열을 다 쓰거나, 새 줄 문자, '\n'을 쓰면 자동으로 flush()
                        |                 
                        li
                            | public PrintStream(OutputStream out, boolean autoFlush, String encoding) Since 1.4 + 1 오버로딩
                        |                 
                        li public PrintStream(String fileName, String csn) Since 1.5 + 2 오버로딩
                        |                 csn : Characterset Name
                        |                 
                        li public PrintStream(File file, String csn) Since 1.5 + 2 오버로딩
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li boolean checkError()
                        |                 flush()한 다음 오류 상태를 검사한다. 예외를 던지지 않으므로 이 메서드로 확인해야 한다. 스트림에 InterruptedIOException이 발생하면 Thread.currentThread().interrupt()를 실행한다.
                        |                 
                        li protected void setError Since 1.1
                        |                 에러 상태를 true로 한다.
                        |                 
                        li protected void clearError Since 1.6
                        |                 에러 상태를 초기화한다.
                        |                 
                        li 각종 print(), println(), append()
                        |                 void print(Object obj) == print(String.valueOf(Object))
                        |                 
                        li PrintStream printf(String format, Object... args) Since 1.5 + 1 오버로딩
                        |                 
                        li PrintStream format(String format, Object... args) Since 1.5 + 1 오버로딩
            |     
            details
                summary class PipedInputStream extends InputStream Since 1.0
                |         
                ol
                    li
                        | PipedOutputStream과 연결되어 바이트들을 받는 InputStream. PipedOutputStream과 별개의 스레드에서 동작해야 한다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/PipedStreamExample.java', lan='java') 예시 코드 »
                    |             
                    li public PipedInputStream(PipedOutputStream src, int pipeSize) Since 1.6 + 3 오버로딩
                    |             pipeSize : 내부 버퍼 크기. 지정되지 않으면 기본값 PIPE_SIZE 이용
                    |             
                    li void connect(PipedOutputStream src)
            |     
            details
                summary class PipedOutputStream extends OutputStream Since 1.0
                |         
                ol
                    li
                        | 연결된 PipedInputStream으로 바이트들을 보내는 OutputStream. PipedInputStream과 별개의 스레드에서 동작해야 한다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/PipedStreamExample.java', lan='java') 예시 코드 »
                    |             
                    li public PipedOutputStream(PipedInpuStream snk) + 1 오버로딩
                    |             
                    li void connect(PipedInputStream snk)
            |     
            details
                summary class SequenceInputStream extends InputStream Since 1.0
                |         
                ol
                    li 여러 InputStream을 이어붙인듯이 활용하는 InputStream.
                    |             
                    li public SequenceInputStream(InputStream s1, InputStream s2)
                    |             
                    li public SequenceInputStream(Enumeration<? extends InputStream> e)
            |     
            details
                summary class PushbackInputStream extends FilterInputStream Since 1.0
                |         
                ol
                    li
                        | 이미 읽은 것을 취소하고 다시 읽을 수 있는 기능을 지원한다. 이전에 읽은 내용을 저장하지는 않으므로, 덮어쓰기처럼 이용할 수 있다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/PushBackExample.java', lan='java') 예시 코드 »
                    |             
                    li public PushbackInputStream(InputStream in, int size) Since 1.1
                    |             
                    li public PushbackInputStream(InputStream in) Since 1.1 : 1바이트짜리 버퍼를 이용한다.
                    |             
                    li void unread(int b) : 하위 8비트만 버퍼에 쓴다.
                    |             
                    li void unread(byte[] b), unread(byte[] b, int off, int len) Since 1.1
            |     
            details
                summary class FileInputStream extends InputStream Since 1.0
                |         
                ol
                    li
                        | FileInputStream(File file) + 2 오버로딩
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/SerializableExample.java', lan='java') 예시 코드 »
                    |             
                    li FileChannel getChannel() Since 1.4
                    |             유니크한 FileChannel을 반환하며, 채널에서의 위치는 스트림에서 읽어들인 만큼과 같다.
                    |             
                    li final FileDescriptor getFD()
            |     
            details
                summary class FileOutputStream extends OutputStream Since 1.0
                |         
                ol
                    li
                        | FileOutputStream(File file, boolean append) + 3 오버로딩
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/SerializableExample.java', lan='java') 예시 코드 »
                    |             
                    li FileOutputStream(FileDescriptor fdObj)
                    |             파일에 대한 새로운 OutputStream을 생성한다. 파일과의 연결에 대한 새 FileDescriptor 객체가 생성되고, 파일의 처음부터 쓰기 시작한다.
                    |             Security manager가 있으면 checkWrite 메서드로 권한을 검사한다.
                    |             
                    li final FileDescriptor getFD()
                    |             
                    li FileChannel getChannel() Since 1.4
                    |             유니크한 FileChannel을 반환하며, 채널에서의 위치는 스트림에서 쓴 바이트 수와 같다(append 모드가 아닐 경우). append 모드에서는 파일의 크기와 채널의 위치가 동일하다.
        hr
        details
            summary 객체 IO(직렬화) 관련
            |     
            details
                summary interface ObjectInput extends DataInput, AutoCloseable Since 1.1
                |         
                ol
                    li DataInput을 통해 기본 자료형을 읽어오고, 추가적으로 객체를 읽어오는 작업을 지원한다.
                    |             
                    li Object readObject()
            |     
            details
                summary interface ObjectOutput extends DataOutput, AutoCloseable Since 1.1
                |         
                ol
                    li DataOutput에 추가로 객체 쓰기 작업을 지원한다.
                    |             
                    li void writeObject(Object obj)
            |     
            details
                summary interface Serializable Since 1.1
                |         
                ol
                    li
                        | 직렬화와 역질렬화를 지원하는 마커 인터페이스. ObjectInputStream, ObjectOutputStream의 메서드들을 이용해 알아서 저장/복구한다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/SerializableExample.java', lan='java') 예시 코드 »
                    |             
                    li 직렬화하지 않을 멤버는 transient 키워드로 표시한다.
                    |             
                    li 직접 구현하고 싶다면 Externalizable 인터페이스를 구현하거나, 다음의 메서드들을 작성한다.
                    |             
                    ul
                        li private void writeObject(java.io.ObjectOutputStream out)
                        |                 out에 알아서 객체 표현 바이트들을 쓰면 된다.
                        |                 
                        li private void readObject(java.io.ObjectInputStream in)
                        |                 in에서 바이트들을 읽어와 알아서 객체를 생성하면 된다.
                        |                 
                        li private void readObjectNoData()
                        |                 객체들의 버전이 다르거나, 기타 이유로 객체를 초기화할 필요가 있는 경우 사용.
                    |             
                    li 대체 객체를 이용해 저장 : ANY-ACCESS-MODIFIER Object writeReplace()
                    |             
                    li 대체 객체를 이용해 복구 : ANY-ACCESS-MODIFIER Object readResolve()
                    |             
                    li 클래스 버전
                    |             정의되지 않은 경우 기본값을 사용하지만, 명시할 것을 권장하고 있다.
                    br
                    |             ANY-ACCESS-MODIFIER static final long serialVersionUID = (version number)L;
            |     
            details
                summary interface Externalizable extends Serializable Since 1.1
                |         
                ol
                    li
                        | 객체 직렬화를 직접 구현하고자 할 때 이를 구현한다. 객체 직렬화는 빈 객체를 만든 뒤 각 속성의 값을 쓰므로 기본 생성자가 필요하다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/ExternalizableExample.java', lan='java') 예시 코드 »
                    |             
                    li void writeExternal(ObjectOutput out)
                    |             객체를 out에 쓴다.
                    |             
                    li void readExternal(ObjectInput in)
                    |             in으로 객체를 생성한다.
            |     
            details
                summary
                    | class ObjectInputStream extends InputStream implements ObjectInput, ObjectStreamConstants Since 1.1
                |         객체 읽기에 관한 InputStream. 
                button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/SerializableExample.java', lan='java') 예시 코드 »
            |     
            details
                summary
                    | class ObjectOutputStream extends OutputStream implements OjbectOutput, ObjectStreamConstants Since 1.1
                |         객체 쓰기에 관한 OutputStream. 
                button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/SerializableExample.java', lan='java') 예시 코드 »
        hr
        details
            summary 문자 단위 IO 관련
            |     
            details
                summary abstract class Reader implements Readable, Closeable Since 1.1
                |         
                ol
                    li char 단위 읽기에 대한 최상위 추상 클래스
                    |             
                    li 서브클래스들은 read(char[], int, int)와 close()만 구현해도 된다.
                |         
                details
                    summary Field Detail
                    |             
                    ol
                        li protected Object lock
                        |                 내부적으로 동기화에 이용하는 객체
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li static Reader nullReader() Since 11
                        |                 아무 것도 읽지 않는 Reader 객체를 반환한다.
                        |                 
                        li int read()
                        |                 char 하나를 읽고 int로 반환. 스트림의 끝이라면 -1을 반환한다.
                        |                 
                        li
                            | int read(char[] cbuf)
                            br
                            |                     abstract int read(char[] cbuf, int off, int len)
                        |                 실제로 읽은 글자 수를 반환.
                        |                 
                        li long skip(long n)
                        |                 실제로 건너 뛴 글자 수(바이트 수x) 반환
                        |                 
                        li boolean ready()
                        |                 다음 read()가 블록되지 않음을 보장하면 true, 보장하지 못하면 false
                        |                 
                        li 마킹 관련 : InputStream과 유사
                        |                 
                        li long transterTo(Writer out) Since 10
                        |                 모든 글자를 읽어 out에 쓴다. 전송한 글자 수를 반환한다.
            |     
            details
                summary abstract class Writer implements Appendable, Closeable, Flushable Since 1.1
                |         
                ol
                    li char 단위 쓰기에 대한 취상위 추상 클래스
                    |             
                    li Appendable하므로 편리함이 크다.
                |         
                details
                    summary Field Detail
                    |             
                    ol
                        li protected Object lock
                        |                 내부적으로 동기화에 이용되는 객체.
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li static Writer nullWriter() Since 11
                        |                 아무것도 쓰지 않는 Writer 객체를 반환한다.
                        |                 
                        li void write(int c)
                        |                 하위 16비트만 쓴고 나머지는 무시한다.
                        |                 
                        li
                            | void write(char[] cbuf)
                            br
                            |                     abstract void write(char[] cbuf, int off, int len)
                            br
                            |                     void write(String str)
                            br
                            |                     void write(String str, int off, int len)
            |     
            details
                summary class InputStreamReader extends Reader Since 1.1
                |         
                ol
                    li
                        | InputStream에 대해 Reader 작업을 지원해주는 bridge 클래스.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/BufferedReaderExample.java', lan='java') 예시 코드 »
                    |             
                    li public InputStreamReader(InputStream in, String charsetName) + 3 오버로딩
                    |             
                    li String getEncoding()
            |     
            details
                summary class OutputStreamWriter extends Writer Since 1.1
                |         
                ol
                    li OutputStream에 Writer 작업을 지원해주는 bridge 클래스.
                    |             
                    li public OutputStreamWriter(OutputStream out, String charsetName) + 3 오버로딩
                    |             
                    li String getEncoding()
            |     
            details
                summary abstract class FilterReader extends Reader Since 1.1
                |         다른 Reader에 대한 필터 장식자 정의 클래스로, 추가적인 메서드는 없다.
            |     
            details
                summary abstract class FilterWriter extends Writer Since 1.1
                |         다른 Writer에 대한 필터 장식자 정의 클래스로, 추가적인 메서드는 없다.
            |     
            details
                summary class CharArrayReader extends Reader Since 1.1
                |         
                ol
                    li 내부 버퍼 char[] buf에 대한 읽기 연산을 지원하는 Reader
                    |             
                    li public CharArrayReader(char[] buf, int offset, int length) + 1 오버로딩
            |     
            details
                summary class CharArrayWriter extends Writer Since 1.1
                |         
                ol
                    li 내부 버퍼 char[] buf에 대해 쓰기 연산을 지원하는 Writer. 버퍼 크기는 자동으로 확장된다.
                    |             
                    li public CharArrayWriter(int initialSize) + 1 오버로딩
                    |             
                    li void writeTo(Writer out)
                    |             out에 버퍼의 모든 내용을 쓴다.
                    |             
                    li void reset()
                    |             버퍼를 비우고 재활용한다.
                    |             
                    li char[] toCharArray()
                    |             
                    li int size()
            |     
            details
                summary class StringReader extends Reader Since 1.1
                |         
                ol
                    li String에 대해 읽기 연산을 수행하는 Reader.
                    |             
                    li public StringReader(String s)
            |     
            details
                summary class StringWriter extends Writer Since 1.1
                |         
                ol
                    li 내부 StringBuffer에 쓰기 연산을 지원하는 Writer.
                    |             
                    li public StringWriter(int initialSize) + 1 오버로딩
                    |             
                    li StringBuffer getBuffer()
            |     
            details
                summary class BufferedReader extends Reader Since 1.1
                |         
                ol
                    li
                        | 다른 Reader에 대한 버퍼를 제공하여, 시스템 읽기 작업이 빈번하게 일어나지 않게 해준다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/BufferedReaderExample.java', lan='java') 예시 코드 »
                    |             
                    li public BufferedReader(Reader in, int sz) + 1 오버로딩
                    |             
                    li String readLine() : EOF도 줄의 끝으로 간주
                    |             
                    li Stream<String> lines() Since 1.8
            |     
            details
                summary class BufferedWriter extends Writer Since 1.1
                |         
                ol
                    li Writer에 버퍼를 제공하여 시스템 쓰기 작업이 빈번하게 일어나지 않도록 한다.
                    |             
                    li public BufferedWriter(Writer out, int sz) + 1 오버로딩
                    |             
                    li void newLine() : 줄 바꿈 문자열은 시스템 속성 line.separator로 결정된다.
            |     
            details
                summary class LineNumberReader extends BufferedReader Since 1.1
                |         
                ol
                    li Reader가 줄 끝을 만날때마다 라인을 카운트하는 클래스. 처음 시작은 0.
                    |             
                    li void setLineNumber(int lineNumber)
                    |             읽기 위치가 이동하는 건 아니다
                    |             
                    li int getLineNumber()
            |     
            details
                summary class PrintWriter extends Writer Since 1.1
                |         PrintStream의 Writer 버전. 텍스트 출력 스트림에 객체들을 정형화된 텍스트로 쓰는 기능을 제공한다.
            |     
            details
                summary class PipedReader extends Reader Since 1.1
                |         PipedInputStream과 유사. 
                button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/PipedReaderExample.java', lan='java') 예시 코드 »
            |     
            details
                summary class PipedWriter extends Writer Since 1.1
                |         PipedOutputStream과 유사. 
                button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/PipedReaderExample.java', lan='java') 예시 코드 »
            |     
            details
                summary class PushbackReader extends FilterReader Since 1.1
                |         PushbackInputStream과 비슷.
                button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/PushBackExample.java', lan='java') 예시 코드 »
            |     
            details
                summary class FileReader extends InputStreamReader Since 1.1
                |         
                ol
                    li public FileReader(File file, Charset charset) Since 11 + 3 오버로딩
                    |             
                    li public FileReader(FileDescriptor fd)
            |     
            details
                summary class FileWriter extends OutputStreamWriter Since 1.1
                |         
                ol
                    li public FileWriter(FileDescriptor fd)
                    |             
                    li public FileWriter(File file, Charset charset, boolean append) Since 11 + 7 오버로딩
        hr
        details
            summary 파일 관련
            |     
            details
                summary @FunctionalInterface interface FileFilter Since 1.2
                |         
                ol
                    li
                        | 파일 패스 필터링에 사용되며 File#listFiles의 매개변수로 객체가 넘겨진다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/FileFilterExample.java', lan='java') 예시 코드 »
                    |             
                    li boolean accept(File pathname)
            |     
            details
                summary @FunctionalInterface interface FilenameFilter Since 1.0
                |         
                ol
                    li
                        | 특정 디렉터리에서의 파일명 필터링에 사용되며 FileDialog#setFilenameFilter, File#list, File#listFiles의 매개변수로 객체가 넘겨진다.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/FilenameFilterExample.java', lan='java') 예시 코드 »
                    |             
                    li boolean accept(File dir, String name)
            |     
            details
                summary
                    | class File implements Serializable, Comparable
                    file  Since 1.0
                |         
                ol
                    li 추상화된 파일 및 디렉터리 경로에 대한 추상화된 표현 제공.(물리적 저장 장치 » 경로 문자열 » File 객체)
                    |             
                    li 경로 문자열은 절대 경로, 상대 경로 둘 다 허용된다. 상대 경로의 기준 위치는 System속성 "user.dir"로 얻을 수 있다.
                    |             
                    li 보다 많은 기능을 제공하는 java.nio.file 패키지가 존재한다.
                |         
                details
                    summary Field Detail
                    |             
                    ol
                        li public static final char separatorChar, String separator
                        |                 시스템 속성 "file.separator", UNIX : '/', Windows : '\\'
                        |                 
                        li public static final char pathSeparatorChar, String pathSeparator
                        |                 시스템 속성 "path.separator", UNIX : ':', Windows : ';'
                |         
                details
                    summary Constructor Detail
                    |             
                    ol
                        li public File(URI uri) Since 1.4 // 기타 생성자 생략
                        |                 file 스킴으로 시작하는 uri를 통해 객체를 초기화한다. uri 형식은 시스템에 따라 다를 수 있다.
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li String getParent(), File getParentFile() Since 1.2
                        |                 
                        li String getPath(), String getAbsolutePath(), File getAbsoluteFile() Since 1.2
                        |                 
                        li String getCanonicalPath() Since 1.1, File getCanonicalFile() Since 1.2
                        |                 
                        li
                            | boolean isAbsolute(), canRead(), exists(), isDirectory(), isHidden(), canExecute() 등
                        |                 
                        li long lastModified(), long length()
                        |                 
                        li
                            | boolean createNewFile(), mkdir(), delete(), renameTo(File dest), setLastModified(long time)
                        |                 
                        li boolean mkdirs() : 경로상 필요한 모든 디렉터리들 생성
                        |                 
                        li
                            | boolean setReadOnly(), setWritable(~), setReadable(~), setExecutable(~) Since 1.6
                        |                 
                        li String[] list(), list(FilenameFilter filter)
                        |                 
                        li
                            | File[] listFiles(), listFiles(FilenameFilter filter), listFiles(FileFilter filter) Since 1.2
                        |                 
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/FileFilterExample.java', lan='java') FileFilter 예시 코드 »
                        |                 
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/FilenameFilterExample.java', lan='java') FilenameFilter 예시 코드 »
                        |                 
                        li static File[] listRoots() Since 1.2
                        |                 
                        li long getTotalSpace(), getFreeSpace(), getUsableSpace() Since 1.6
                        |                 
                        li
                            | static File createTempFile(String prefix, String suffix, File directory) Since 1.2
                        |                 
                        li static File createTempFile(String prefix, String suffix) Since 1.2
                        |                 특정 디렉터리에 새로운 빈 파일을 만들어 반환한다. 이 메서드는 오직 임시 파일 작업을 위해 만들어졌으며, deleteOnExit()을 통해 자동으로 정리되어야 한다.
                        br
                        |                 prefix : 의미 있는 접두어, suffix : null이면 ".tmp"
                        |                 
                        li void deleteOnExit() Since 1.2
                        |                 
                        li int hashCode() : 추상 경로이름과 1234321 사이의 xor 연산
                        |                 
                        li URI toURI() Since 1.4, java.nio.file.Path toPath() Since 1.7
                        |                 
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/FileExample.java', lan='java') File 예시 코드 »
            |     
            details
                summary final class FilePermission extends Permission implements Serializable Since 1.2
                |         
                ol
                    li
                        | 파일 및 디렉터리에 관한 권한을 표현하는 클래스.
                        button.btn-code(path='Repositories/Eclipse/JavaSE/src/io/FilePermissionExample.java', lan='java') 예시 코드 »
                    |             
                    ul
                        li "/*"로 끝나는 경로는 해당 디렉터리 내부 모든 파일 및 디렉터리를 가리킨다. "*"는 현재 디렉터리 내부.
                        |                 
                        li "/-"로 끝나는 경로는 해당 디렉터리 내부 모든 파일 및 모든 서브디렉터리를 가리킨다. "-"는 현재 디렉터리 내부.
                        |                 
                        li "<<ALL FILES>>"로 표현된 경로는 임의 파일과 대응한다.
                        |                 
                        li 권한 리스트는 콤마로 구분한 문자열로 표현한다.
                        |                 가능한 키워드는 "read", "write", "execute"(Runtime.exec 메서드 호출 관련), "delete"(File.delete 메서드 호출 관련), "readlink"(java.nio.file.Files.readSymbolicLink 메서드와 관련)
                        |                 
                        li 주의 : 임의 파일에 대한 권한은 보안상 위험하다. 기본적으로 코드가 포함된 디렉터리는 읽기가 가능하므로 굳이 권한을 부여할 필요 없다.
                |         
                details
                    summary Constructor Detail
                    |             
                    ol
                        li public FilePermission(String path, String actions)
                        |                 시스템 속성 "jdk.io.permissionsUseCanonicalPath"가 매개변수 path의 처리에 대해 기술한다.
                        |                 
                        a.w3-btn.w3-round.w3-round-xxlarge.w3-small.w3-green(target='_blank', href='https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/io/FilePermission.html#%3Cinit%3E(java.lang.String,java.lang.String)') 자세히
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li boolean implies(Permission p) : 객체의 권한이 인자의 권한을 내포하는지 여부 반환
                        |                 
                        li String getActions()
                        |                 
                        li PermissionCollection newPermissionCollection()
                        |                 예. 컬렉션에 다음 두 가지 권한─("/tmp/-", "read"), ("/tmp/scratch/foo", "write")─들이 있을 때, 이에 대한 implies메서드에 권한 ("/tmp/scratch/foo", "read,write")을 넘겨준 결과는 true를 반환해야 한다.
            |     
            details
                summary class RandomAccessFile implements DataOutput, DataInput, Closeable Since 1.0
                |         
                ol
                    li 읽기/쓰기 가능한 임의 접근 파일. 읽기/쓰기의 기준 위치 file pointer가 존재.
                    |             읽기로 예정된 바이트들을 모두 읽기 전에 EOF를 만나면 EOFException 발생.
                |         
                details
                    summary Constructor Detail
                    |             
                    ol
                        li RandomAccessFile(String name, String mode)
                        |                 
                        li RandomAccessFile(File file, String mode)
                        |                 mode » "r", "rw", "rws"(파일 내용 및 메타데이터 변경을 곧바로 반영), "rwd"(파일 내용 변경을 곧바로 반영)
                |         
                details
                    summary Method Detail
                    |             
                    ol
                        li final FileDescriptor getFD()
                        |                 
                        li final FileChannel getChannel() Since 1.4
                        |                 
                        li
                            | int read() : InputStream.read()와 동일
                            br
                            |                     int read(byte[] b)
                            br
                            |                     int read(byte[] b, int off, int len)
                            br
                            |                     final void readFully(byte[] b)
                            br
                            |                     readFully(byte[] b, int off, int len)
                        |                 
                        li long getFilePointer()
                        |                 
                        li void seek(long pos) : file pointer 설정
                        |                 
                        li long length()
                        |                 
                        li void setLength(long newLength) Since 1.2
                        |                 기존 크기 > newLength && getFilePointer() > newLength → 자르고, file pointer = newLength
                        br
                        |                 기존 크기 < newLength → 확장. 확장한 영역의 데이터는 초기화되지 않는다.
        hr
