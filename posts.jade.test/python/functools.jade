html
    body
        script(src='/source/redirect.js?200226_1657')
        ul
            li @cached_property(func) Since 3.8
            |     
            ul
                li 인스턴스 메서드를 동일한 이름의 프로퍼티로 만든다.
                |         따라서 인스턴스의 __dict__에 접근할 수 있어야 한다.
                |         
                li 최초 프로퍼티 접근 시 실행된 반환값이 프로퍼티의 값으로 고정된다.
            |     
            |     
            li cmp_to_key(func) Since 3.2
            |     인자 2개를 먹고 int를 반환하는 비교 함수를 인자 1개를 먹고 정렬키를 반환하는 함수로 변환해 반환한다
            |     
            |     
            li
                | @lru_cache(user_function)
                br
                |         @lru_cache(maxsize=128, typed=False)
            |     
            ul
                li 메서드 인자에 대한 리턴값을 캐시해준다.
                |         메서드 모든 인자는 해시 가능해야 한다.
                |         
                li 메서드 인자의 순서에 유의
                |         f(a=1, b=2)와 f(b=2, a=1)의 호출을 서로 다르다고 간주할 수 있다
                |         
                li maxsize는 2의 거듭제곱일 때 최고 성능으로 작동된다. None이면 무제한
                |         
                li typed가 True인 경우, f(3)과 f(3.0)은 서로 다른 캐시 아이템이 된다
                |         
                li 래핑된 함수는 cache_info() 메서드를 가지며, 이는 캐시 적중률, 실패율 등을 반환한다.
                |         
                li 래핑된 함수는 cache_clear() 메서드를 가지며, 이는 캐시 상태를 초기화한다.
                |         
                li 래핑된 함수는 __wrapped__ 속성으로 기존 함수를 보존한다
                |         따라서 같은 함수에 대해 여러 캐시를 두게 할 수도 있다.
            |     
            |     
            li @total_ordering Since 3.2
            |     
            ul
                li 클래스에 비교연산을 일부만 정의하면 나머지는 자동으로 채워준다
                |         __lt__(), __le__(), __gt__(), __ge__() 중 하나는 필수, __eq__()가 필요할 수도
            |     
            |     
            li partial(func, /, *args, **keywords)
            |     
            ul
                li 인자 일부를 고정시킨 부분 함수를 반환한다.
                |         
                li func, args, keywords 각각은 반환된 객체의 속성이 된다
                |         
                li
                    | 부분 함수 호출에 제공된 positional 인자들은 args 뒤에 순서대로 붙고, keyword 인자들은 keywords를 override한다.
            |     
            |     
            li class partialmethod(func, /, *args, **keywords) Since 3.4
            |     메서드의 인자 일부를 고정시켜 반환한다. func는 descriptor 또는 callable.
            |     
            |     
            li reduce(function, iterable[, initializer])
            |     
            |     
            li @singledispatch
            |     함수의 오버로딩을 가능하게 해준다. 최소 한 개의 positional 인자가 필요하며, 이 인자의 타입을 기준으로 호출을 나눈다.
            |     
            button.btn-code(path='Repositories/Python/Library/functools_singledispatch.py', lan='python') 예시 코드 »
            |     
            |     
            li class singledispatchmethod(func) Since 3.8
            |     메서드의 오버로딩을 가능하게 해준다. @singledispatch 참고
            |     
            |     
            li
                | update_wrapper(wrapper, wrapped, assigned=WRAPPER_ASSIGNMENTS, updated=WRAPPER_UPDATES)
                br
                |         @wraps(wrapped, assigned=WRAPPER_ASSIGNMENTS, updated=WRAPPER_UPDATES)
            |     래핑된 함수를 래핑 전 함수처럼 보이도록 변경한다.
            |     
            button.btn-code(path='Repositories/Python/Library/functools_wraps.py', lan='python') 예시 코드 »
