html
    body
        script(src='/source/redirect.js?200226_1657')
        hr
        details
            summary Git; https://git-scm.com/book/ko
            |     
            ul
                li Git은 각 버전 사이의 변경 사항을 기록하지 않는다.
                |         
                li 커밋
                |         
                ul
                    li 스테이지에 올라간 각 파일들은 해시값과 함께 blob 객체로 .git에 저장된다
                    |             
                    li 루트 디렉터리부터 각 서브 디렉터리들은 자식 노드들에 대한 포인터를 가지며, 해시값과 함께 tree 객체로 .git에 저장된다
                    |             
                    li 커밋 객체는 루트 디렉터리 tree 객체에 대한 포인터와 이전 커밋 객체(있다면)에 대한 포인터를 가지며, 해시값과 함께 .git에 저장된다
                |         
                li 브랜치는 커밋 객체를 가리키는 포인터
                |         
                li HEAD는 현재 작업중인 브랜치를 가리키는 포인터(checkout으로 변경)
                |         
                li origin/ : 서버 브랜치
        hr
        details
            summary Git Server
            |     
            ul
                li 가능 프로토콜 : Local, SSH, Git, HTTP
                |         
                li Git 호스팅 업체 : https://git.wiki.kernel.org/index.php/GitHosting
        hr
        details
            summary Submodule
            |     
            ul
                li 관리하는 디렉터리 자체가 다른 git 저장소일 수 있다
                |         
                li git submodule init
                |         
                li git submodule update
        hr
        details
            summary Git Hook
            |     
            ul
                li 특정 이벤트 발생 시 실행될 스크립트들을 .git/hooks에 저장한다
                |         해당 디렉터리에는 예제 스크립트들이 존재한다
                |         
                li pre-commit : 클라이언트에서 커밋 메시지를 작성하기 전에 호출된다. 0으로 종료하지 않으면 커밋 취소
                |         git commit --no-verify로 일시 생략 가능
                |         
                li prepare-commit-msg : 커밋 메시지를 생성한 뒤, 편집기를 실행하기 전에 실행
                |         
                li commit-msg : 커밋 메시지가 들어 있는 임시 파일의 경로를 인자로 받는다. 0으로 종료하지 않으면 커밋 취소
                |         
                li post-commit : 커밋 완료 후 실행
                |         
                li pre-receive : 서버에서 push 전에 실행되며, 0으로 종료하지 않으면 push 거절
                |         
                li post-receive : 서버에서 push 후에 실행
                |         
                li update : 브랜치마다 한 번씩 실행되는 것을 제외하면 pre-receive와 동일
        hr
