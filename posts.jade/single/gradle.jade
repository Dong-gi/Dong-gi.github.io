include ../../source/skeleton.jade
+post('Gradle', 'Gradle', 'Gradle 정리')
    h1.marker
        | Gradle 
        +asA('https://docs.gradle.org/current/userguide/userguide.html')
    ol
        li 스크립트를 이용해 유연한 빌드 자동화 툴
        p 스크립트는 Groovy, Kotlin으로 작성 가능
        li 변경이 없는 빌드 절차의 결과를 재사용하여 빠른 빌드 가능
        li CLI
        +asCode('shell').
            $ gradle [option...] [task...]
            $ gradle --help                                   # 도움말 1
            $ gradle --daemon                                 # 그래들 데몬을 실행시켜둔다. 반복 빌드가 빨라진다.
            $ gradle -b new.gradle                            # 스크립트 파일 지정. 기본 build.gradle
            $ gradle             tasks                        # 작업 목록 출력
            $ gradle             help                         # 도움말 2
            $ gradle             help --task init             # init 작업 도움말 출력
            $ gradle             init --type java-application # 프로젝트 스켈레톤 생성
    div
        h2.marker build.gradle
        ol
            li.marker Task; 작업
            +asCode('gradle').
                def msg = 'hello world'
                task hello {
                    doLast {
                        println msg
                    }
                }
            
            li.marker Task dependencies; 작업 의존
            +asCode('gradle').
                def msg = 'hello world'
                task hello {
                    doLast {
                        println msg
                    }
                }
                task hello2 {
                    dependsOn hello
                    doFirst {
                        println "I need 'hello' task"
                    }
                    doLast {
                        println msg
                    }
                }
            
            li.marker Dynamic tasks; 동적 작업
            +asCode('gradle').
                for ( i in [2, 4, 6] ) {
                    task "hello${i}" {
                        doLast {
                            println "${'hello?' * i}"
                        }
                    }
                }
            
        +asCode('gradle').
            clean {
                delete << 'src/main/tmp' // clean 작업 시 'src/main/tmp' 디렉터리도 정리
            }
            
            dependencies {
                providedCompile '' // 빌드 시 사용 && 출력에 미포함
                compile ''         // 빌드 시 사용 && 출력에 포함
                testCompile ''     // 테스트에만 필요
            }

    h1.marker Gradle Wrapper; gradlew
    p Gradle이 설치되지 않았어도, 프로젝트가 필요로 하는 버전의 Gradle을 자동으로 설치해 이용한다.
