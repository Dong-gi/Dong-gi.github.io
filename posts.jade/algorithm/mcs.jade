include ../../source/skeleton.jade

+post('Mathematics for Computer Science', 'MCS, Mathematics', 'Mathematics for Computer Science 정리', true)
    h1 도서 정보
    .w3-row
        .w3-col.s2.w3-center
            +w3img('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQew5ZrEOtvLqafGH3aEaTctFKCSV4qjsRoZS4tT7Ci_lJXjSIV', '도서 이미지')&attributes({style: 'max-height:210px'})
        .w3-col.s10
            table.no-sort
                +tds('표제/저자사항', 'Mathematics for Computer Science / Eric Lehman, F Thomson Leighton, Albert R Meyer')
                +tds('ISBN 정보', '979-11-88621-12-5 [93000]')
                tr
                    td Copyright
                    td
                        | 2017, Eric Lehman, F Tom Leighton, 
                        +asA('http://people.csail.mit.edu/meyer', 'Albert R Meyer')
                        | . This work is available under the terms of the 
                        +asA('http://creativecommons.org/licenses/by-sa/3.0/', 'Creative Commons Attribution-ShareAlike 3.0 license.')

    h1.marker Proofs
    div
        h2 Introduction
        p
            strong 정의.
            |  명제(proposition)에 대한 수학적 증명이란, 기본 공리(axiom)들로부터 명제에 도달하는 일련의 논리적 연역(deduction)이다.
        h2.marker What is a Proof?
        div
            h3.marker Propositions
            p
                strong 정의.
                |  명제(proposition)란 참 또는 거짓인 문장이다.
            p
                strong Conjecture.
                |  [오일러 추측] 방정식 식[a^4+b^4+c^4=d^4]식을 만족하는 양의 정수 식[a, b, c, d]식는 존재하지 않는다.
                br
                | 이를 아래와 같이 표현할 수 있다
                | \[\forall a, b, c, d \in \mathbb{Z}^+. a^4+b^4+c^4 \ne d^4.\]
            h3.marker Predicates
            p
                strong 정의.
                |  Predicate ::= 변수에 의해 진리값이 결정되는 문제
            p
                | 예. 식[P(n) ::= \text{"n은 완전제곱수다"}]식
            h3.marker The Axiomatic Method
            p
                strong 정의.
                ul
                    li 정리(Theorem) ::= 중요한 참 명제
                    li 보조정리(Lemma) ::= 이후 명제를 증명하는 데 필요한 예비 명제
                    li 따름정리(Corollary) ::= 정리로부터 쉽게 도출되는 명제
            h3.marker Our Axioms
            div
                p
                    strong 정의.
                    |  Implication ::= 식[\text{"If }P\text{, then }Q\text{"}]식처럼 조건을 갖는 명제.
                    |  종종 식[P\text{ IMPLIES }Q]식, 식[P \implies Q]식로 표현한다.
                p 증명을 간결하게 하기 위해 아래의 공리(Axiom)들을 증명없이 이용한다
                h4 Logical Deductions
                p
                    strong Rule.
                    |  식[{P, P \implies Q \over Q}]식
                    p ↑ 식[{P, P \implies Q}]식 모두 참이면 식[Q]식도 참이라는 의미
                p
                    strong Rule.
                    |  식[{P \implies Q, Q \implies R \over P \implies R}]식
                p
                    strong Rule.
                    |  식[{\operatorname{NOT}(Q) \implies \operatorname{NOT}(P) \over P \implies Q}]식
            h3.marker Proving an Implication
            div
                h4 Method #1
                ol
                    li 다음과 같이 쓴다. "P가 참이라고 가정한다"
                    li Q가 논리적으로 도출됨을 보인다
                h4 Method #2
                ol
                    li 다음과 같이 쓴다. "대우명제를 통해 증명한다"
                    li 식[{\operatorname{NOT}(Q) \implies \operatorname{NOT}(P)}]식을 Method #1으로 증명한다
            h3.marker Proving an "If and Only If"
            div
                h4 Method #1
                ol
                    li 다음과 같이 쓴다. "식[P \implies Q]식과 그 역을 증명한다."
                    li 다음과 같이 쓴다. "먼저 식[P \implies Q]식를 증명한다". 이후 증명
                    li 다음과 같이 쓴다. "다음으로 식[Q \implies P]식를 증명한다". 이후 증명
                h4 Method #2
                ol
                    li 다음과 같이 쓴다. "We construct a chain of if-and-only-if implications."
                    li 어떠한 식(들)이 P와 동치임을 보이고, 다시 Q와도 동치임을 보인다.
            h3.marker Proof by Cases
            p 명제가 가능한 모든 경우의 수에 대해 성립함을 보일 수 있다면 참임을, 단 하나의 경우라도 거짓임을 보인다면 거짓임을 증명할 수 있다.
            h3.marker Proof by Contradiction
            ol
                li 다음과 같이 쓴다. "모순(Contradiction)을 통해 증명한다."
                li 다음과 같이 쓴다. "P가 거짓이라고 가정한다"
                li 논리적으로 모순임을 보인다
                li 다음과 같이 쓴다. "이는 모순이며, 따라서 P는 참이다"
            div
                h4 Example
                p
                    +pos('Theorem 1.8.1.')
                    strong Theorem 1.8.1.
                    |  식[\sqrt{2}]식는 무리수다.
                p
                    i Proof.
                    |  모순을 통해 증명한다. 식[\sqrt{2}]식가 유리수라면, 이를 표현할 수 있는 기약분수 식[n / d]식이 존재해야 한다.
                    br
                    | 두 식을 모두 거듭제곱하면 식[2 = n^2 / d^2]식이 성립하며, 따라서 식[2d^2 = n^2]식이다. 이는 n이 2의 배수여야 함을 의미하며, 또다시 식[2d^2]식는 4의 배수여야 함을 의미한다.
                    br
                    | 결국 n과 d모두 2의 배수여야 하지만, 이는 식[n / d]식이 기약분수라는 것에 위배된다. 이는 모순이며, 따라서 식[\sqrt{2}]식는 무리수다.
            h3.marker Good Proofs in Practice
            ul
                li 증명은 계산이 아니라 에세이다.
            h3.marker Problems
            div
                h4 Problem 1.1.
                p
                    | Albert announces to his class that he plans to surprise them with a quiz sometime
                    |  next week.
                    br
                    | His students first wonder if the quiz could be on Friday of next week. They
                    |  reason that it can’t: if Albert didn’t give the quiz before Friday, then by midnight
                    |  Thursday, they would know the quiz had to be on Friday, and so the quiz wouldn’t
                    |  be a surprise any more.
                    br
                    | Next the students wonder whether Albert could give the surprise quiz Thursday.
                    |  They observe that if the quiz wasn’t given before Thursday, it would have to be
                    |  given on the Thursday, since they already know it can’t be given on Friday. But
                    |  having figured that out, it wouldn’t be a surprise if the quiz was on Thursday either.
                    br
                    | Similarly, the students reason that the quiz can’t be on Wednesday, Tuesday, or
                    |  Monday. Namely, it’s impossible for Albert to give a surprise quiz next week. All
                    |  the students now relax, having concluded that Albert must have been bluffing. And
                    |  since no one expects the quiz, that’s why, when Albert gives it on Tuesday next
                    |  week, it really is a surprise!
                    br
                    | What, if anything, do you think is wrong with the students’ reasoning?
                p → '다음 주 금요일이 시험날이 될 수 없다'는 결론은 '금요일 전까지 시험을 내지 않았다'는 가정이 참일 때만 유효하며, 해당 가정의 진리값은 실제로 다음 주 금요일 자정을 넘기지 않는 이상 알 수 없으므로, 적절한 수학적 명제로 볼 수 없다.
                h4 Problem 1.3.
                p What's going on here?
                p \[1=\sqrt{1}=\sqrt{(-1)(-1)}=\sqrt{-1}\sqrt{-1}=\left(\sqrt{-1}\right)^2=-1\]
                ol
                    li Precisely identify and explain the mistake(s) in this <i>bogus</i> proof.
                    p 식[\sqrt{ab} = \sqrt{a}\sqrt{b}]식는 식[a,b\in \mathbb{R}^{0+}]식인 경우만 성립한다. 따라서 식[\sqrt{(-1)(-1)}=\sqrt{-1}\sqrt{-1}]식 이후의 추론은 모두 잘못됐다.
                    li Prove (correctly) that if 1 = -1, then 2 = 1.
                    p 1 = -1 양변에 1을 더하면 2 = 0. 다시 양변에 2로 나누면 1 = 0. 따라서 2 = 0 = 1이 성립한다.
                h4 Problem 1.4.
                p Identify exactly where the bugs are in each of the following bogus proofs.
                ol
                    li <i>Bogus proof</i> : 식[1¢ = $0.01 = ($0.1)^2 = (10¢)^2 = 100¢ = $1]식
                    p 식[$0.01 = $(0.1)^2]식, 식[($0.1)^2=$^2(0.1)^2]식 각각은 성립하지만 식[$ \ne 1]식이므로 식[$0.01 = ($0.1)^2]식은 성립하지 않는다.
                h4 Problem 1.5.
                p
                    | It's a fact that the Arithmetic Mean is at least as large as the Geometric Mean,
                    |  namely, 식[{a+b \over 2} \ge \sqrt{ab}]식
                    |  for all nonnegative real numbers a and b. But there’s something objectionable
                    |  about the following proof of this fact. What’s the objection, and how would you fix it?
                p
                    i Bogus proof.
                    | \begin{align}
                    |   {a+b \over 2} \ge & \sqrt{ab}, && so \\
                    |   a+b \ge & 2\sqrt{ab}, && so \\
                    |   a^2+2ab+b^2 \ge & 4ab, && so \\
                    |   a^2-2ab+b^2 \ge & 0, && so \\
                    |   (a-b)^2 \ge & 0 && \text{which we know is true.}
                    | \end{align}
                    br
                    | The last statement is true because a - b is a real number, and the square of a real
                    |  number is never negative. This proves the claim.
                p → 증명해야 하는 명제를 가정에서 참으로 이용하고 있으므로 시작부터 잘못된 증명이다.
                h4 Problem 1.7.
                p
                    | Show that 식[\operatorname{log}_{7}n]식 is either an integer or irrational, where n is a positive integer. Use
                    |  whatever familiar facts about integers and primes you need, but explicitly state such facts.
                p
                    | → 모순을 통해 증명한다. 식[\operatorname{log}_{7}n]식이 정수가 아닌 유리수라면, 이를 표현할 수 있는 기약분수 식[{a \over b}]식이 존재해야 한다.
                    br
                    | 식[\operatorname{log}_{7}n = {a \over b} \implies n = 7^{a \over b} \implies n^b=7^a]식
                    br
                    | 따라서 n은 7의 배수여야 한다. n을 소인수분해하면 식[n=2^{x_1} \cdot 3^{x_2} \cdot 5^{x_3} \cdot 7^{x_4} \cdots prime_k^{x_k} = 7^a]식.
                    br
                    | 이때, 우변의 식[7^a]식은 7외의 소수로 나눌 수 없으므로 식[n=2^{0} \cdot 3^{0} \cdot 5^{0} \cdot 7^{x_4} \cdots prime_k^{0} = 7^{x_4}]식.
                    br
                    | 따라서 식[n^b = 7^{x_4 b} = 7^a \implies x_4 b = a \implies {a \over b} = x_4]식. 하지만 이는 식[a \over b]식가 기약분수라는 가정에 위배된다.
                    br
                    | 이는 모순이며, 따라서 식[\operatorname{log}_{7}n]식은 정수거나 무리수이다.
                h4 Problem 1.9.
                p
                    | If we raise an irrational number to an irrational power, can the result be rational?
                    |  Show that it can by considering 식[\sqrt{2}^{\sqrt{2}}]식 and arguing by cases.
                p → 임의 정수 n, 임의 유리수 r, 임의 무리수 i에 대하여 식[r^{{n \over i} \cdot i}=r^n]식이 성립한다.
                h4 Problem 1.16.
                p
                    | Give an example of two distinct positive integers m, n such that
                    |  식[n^2]식 is a multiple of m, but n is not a multiple of m. How about having m be less than n?
                p → m = 4, n = 6
        h2.marker The Well Ordering Principle
        div
            p
                strong Definition.
                |  The <i>Well Ordering Principle(WOP)</i> ::= Every <i>nonempty</i> set of <i>nonnegative integers</i> has a <i>smallest</i> element.
            h3.marker Template for WOP Proofs
            p WOP을 이용해 식[P(n)\text{ is true for all }n \in \mathbb{N}]식을 증명하기
            ol
                li P(n)의 반례집합 C를 정의한다. 식[C ::= \left\{n \in \mathbb{N} | \operatorname{NOT}(P(n))\text{ is true.}\right\}]식
                li "C는 공집합이 아니다"를 모순을 통해 증명한다.
                li WOP에 의해, C에는 최소 원소 n이 존재해야 한다.
                li P(n)이 참임을 보이면, 식[n \notin C]식이며 따라서 n이 아닌 다른 최소 원소가 C에 존재해야 한다. 이는 n이 C의 최소 원소라는 것에 모순이므로,
                li C는 공집합이다. 따라서 P(n)은 항상 참이다.
            p
                +pos('Theorem 2.2.1.')
                strong Theorem 2.2.1.
                |  식[\forall n \in \mathbb{N}. 1 + 2 + \cdots + n = n(n+1)/2]식
            p
                i Proof.
            ul
                li n = 0. 0 = 0(0+1)/2
                li n = 1. 1 = 1(1+1)/2
                li n > 1.
                p
                    | 반례집합 식[C ::= \left\{n \in \mathbb{N}|1+2+\cdots+n\ne n(n+1)/2\right\}]식이 공집합임을 보여 증명한다.
                    br
                    | 먼저 C가 원소를 가진다고 가정하자. WOP에 의해 C에는 최소 원소 c > 1이 존재한다.
                    |  이때, c-1 > 0이므로 식[1+2+\cdots+(c-1)=(c-1)c/2]식가 성립한다.
                    |  양변에 c를 더하면 식[1+2+\cdots+c=(c-1)c/2 + c=c(c+1)/2]식이므로, 식[c \notin C]식이다.
                    br
                    | 이는 c가 C의 최소 원소라는 것에 모순이므로, C는 공집합이며, 따라서 명제는 항상 참이다.
            h3.marker Factoring into Primes
            p
                +pos('Theorem 2.3.1.')
                strong Theorem 2.3.1.
                |  1보다 큰 모든 자연수는 소수의 곱으로 표현할 수 있다 ─ 소인수분해 가능하다.
            p
                i Proof.
                |  반례집합 C가 원소를 가진다고 가정하자. WOP에 의해 C에는 최소 원소 n > 1이 존재한다.
                |  이때, n은 소수일 수 없으므로 식[1 < a, b < n]식를 만족하는 두 자연수 a, b의 곱이다.
                br
                |  n이 C의 최소원소기 때문에 식[a, b \notin C]식며, 따라서 a, b 각각은 소인수분해 가능하다.
                |  따라서 식[n = ab]식 역시 소인수분해 가능하며, 이는 C가 원소를 가질 수 없음을 의미한다.
            h3.marker Well Ordered Sets
        h2.marker Logical Formulas
        div
            h3.marker Propositions from Propositions
            h3.marker Propositional Logic in Computer Programs
            h3.marker Equivalence and Validity
            h3.marker The Algebra of Propositions
            h3.marker The SAT Problem
            h3.marker Predicate Formulas
            h3.marker Problems
        h2.marker Mathematical Data Types
        div
            h3.marker Sets
            h3.marker Sequences
            h3.marker Functions
            h3.marker Binary Relations
            h3.marker Finite Cardinality
        h2.marker Induction
        div
            h3.marker Ordinary Induction
            h3.marker Strong Induction
            h3.marker Strong Inductions vs. Induction vs. Well Ordering
        h2.marker State Machines
        div
            h3.marker States and Transitions
            h3.marker The Invariant Principle
            h3.marker Partial Correctness &amp; Termination
            h3.marker The Stable Marriage Problem
        h2.marker Recursive Data Types
        div
            h3.marker Recursive Definitions and Structural Induction
            h3.marker Strings of Matched Brackets
            h3.marker Recursive Functions on Nonnegative Integers
            h3.marker Arithmetic Expressions
            h3.marker Games as a Recursive Data Type
            h3.marker Induction in Computer Science
        h2.marker Infinite Sets
        div
            h3.marker Infinite Cardinality
            h3.marker The Halting Problem
            h3.marker The Logic of Sets
            h3.marker Does All This Really Work?
    h1.marker Structures
    div
        h2 Introduction
        h2.marker Number Theory
        div
            h3.marker Divisibility
            h3.marker The Greatest Common Divisor
            h3.marker Prime Mysteries
            h3.marker The Fundamental Theorem of Arithmetic
            h3.marker Alan Turing
            h3.marker Modular Arithmetic
            h3.marker Remainder Arithmetic
            h3.marker Turing's Code (Version 2.0)
            h3.marker Multiplicative Inverses and Cancelling
            h3.marker Euler's Theorem
            h3.marker RSA Public Key Encryption
            h3.marker What has SAT got to do with it?
            h3.marker Problems
        h2.marker Directed graphs &amp; Partial Orders
        div
            h3.marker Vertex Degrees
            h3.marker Walks and Paths
            h3.marker Adjacency Matrices
            h3.marker Walk Relations
            h3.marker Directed Acyclic Graphs &amp; Scheduling
            h3.marker Partial Orders
            h3.marker Representing Partial Orders by Set Containment
            h3.marker Linear Orders
            h3.marker Product Orders
            h3.marker Equivalence Relations
            h3.marker Summary of Relational Properties
            h3.marker Problems
        h2.marker Communication Networks
        div
            h3.marker Routing
            h3.marker Routing Measures
            h3.marker Network Designs
        h2.marker Simple Graphs
        div
            h3.marker Vertex Adjacency and Degrees
            h3.marker Sexual Demographics in America
            h3.marker Some Common Graphs
            h3.marker Isomorphism
            h3.marker Bipartite Graphs &amp; Matchings
            h3.marker Coloring
            h3.marker Walks in Simple Graphs
            h3.marker Connectivity
            h3.marker Special Walks and Tours
            h3.marker k-connected Graphs
            h3.marker Forests &amp; Trees
            h3.marker Problems
        h2.marker Planar Graphs
        div
            h3.marker Drawing Graphs in the Plane
            h3.marker Definitions of Planar Graphs
            h3.marker Euler's Formula
            h3.marker Bounding the Number of Edges in a Plannar Graph
            h3.marker Returning to 식[K_5]식 and 식[K_{3,3}]식
            h3.marker Coloring Planar Graphs
            h3.marker Classifying Polyhedra
            h3.marker Another Characterization for Planar Graphs
    h1.marker Counting
    div
        h2 Introduction
        h2.marker Sums and Asymptotics
        div
            h3.marker The Value of an Annuity
            h3.marker Sums of Powers
            h3.marker Approximating Sums
            h3.marker Hanging Out Over the Edge
            h3.marker Products
            h3.marker Double Trouble
            h3.marker Asymptotic Notation
        h2.marker Cardinality Rules
        div
            h3.marker Counting One Thing by Counting Another
            h3.marker Counting Sequences
            h3.marker The Generalized Product Rule
            h3.marker The Division Rule
            h3.marker Counting Subsets
            h3.marker Sequences with Repetitions
            h3.marker Counting Practice: Poker Hands
            h3.marker The Pigeonhole Principle
            h3.marker Inclusion-Exclusion
            h3.marker Combinatorial Proofs
            h3.marker Problems
        h2.marker Generating Functions
        div
            h3.marker Infinite Series
            h3.marker Counting with Generating Functions
            h3.marker Partial Fractions
            h3.marker Solving Linear Recurrences
            h3.marker Formal Power Series
            h3.marker Problems
    h1.marker Probability
    div
        h2 Introduction
        h2.marker Events and Probability Spaces
        div
            h3.marker Let's Make a Deal
            h3.marker The Four Step Method
            h3.marker Strange Dice
            h3.marker The Birthday Principle
            h3.marker Set Theory and Probability
            h3.marker Problems
        h2.marker Conditional Probability
        div
            h3.marker Month Hall Confusion
            h3.marker Definition and Notation
            h3.marker The Four-Step Method for Conditional Probability
            h3.marker Why Tree Diagrams Work
            h3.marker The Law of Total Probability
            h3.marker Simpson's Paradox
            h3.marker Independence
            h3.marker Mutual Independence
            h3.marker Probability versus Confidence
        h2.marker Random Variables
        div
            h3.marker Random Variable Examples
            h3.marker Independence
            h3.marker Distribution Functions
            h3.marker Great Expectations
            h3.marker Linearity of Expectation
        h2.marker Deviation from the Mean
        div
            h3.marker Markov's Theorem
            h3.marker Chebyshev's Theorem
            h3.marker Properties of Variance
            h3.marker Estimation by Random Sampling
            h3.marker Confidence in an Estimation
            h3.marker Sums of Random Variables
            h3.marker Really Great Expectations
        h2.marker Random Walks
        div
            h3.marker Gambler's Ruin
            h3.marker Random Walks on Graphs
    h1.marker Recurrences
        h2 Introduction
        h2.marker Recurrences
        div
            h3.marker The Towers of Hanoi
            h3.marker Merge Sort
            h3.marker Linear Recurrences
            h3.marker Divide-and-Conquer Recurrences
            h3.marker A Feel for Recurrences
