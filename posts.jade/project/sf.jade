include ../../source/skeleton.jade
+post('SF Document', 'SF, Webapp Framework, HTML Framework', 'Why do more? Here\'s Simplest html Framework.')
    h1.marker SF; Simplest html Framework
    div
        h2.marker Goal
        p The world most simplest html framework

        h2.marker Versions
        table
            +ths('version', 'size', 'link')
            tr
                td 0.3.2
                td 10.9KB
                td: +asA('https://github.com/Dong-gi/SF/releases/download/0.3.2/sf.min.js')
            tr
                td 0.2.1
                td 6.61KB
                td: +asA('https://github.com/Dong-gi/SF/releases/download/0.2.1/sf.min.js')
            tr
                td 0.1.3
                td 2.02KB
                td: +asA('https://github.com/Dong-gi/SF/releases/download/0.1.3/sf.min.js')
        
        h2.marker Terms
        ol
            li SFNode
            ul
                li Proxy object of other object(Usually HTMLElement instance)
                li Returned by SF.build, SF.asSF, SF.asSFarr
                li Original object can be accessed by SFNode.$
            li App instance
            p SFNode returned by SF.build

    h1.marker Demos
    div
        h2.marker Version 0.1.3
        div
            h3.marker Get app instance
            +asCode('javascript').
                const app = SF.build()              // root = document.querySelector('[sf]')
                const app = SF.build(document.body) // root = document.body
            
            h3.marker Hello World
            +asCode('javascript').
                const app = SF.build();
                app.head.$title.innerText = 'Title : Hello World';
                app.body.innerText = 'Body : Hello World';
            +codeBtn('/Repositories/JavaScript/SF/demo1.html', 'html')
            +asA('/Repositories/JavaScript/SF/demo1.html', 'Open new tab')

            h3.marker Template Example 1
            +asCode('javascript').
                const Card = app.newTemplate(templateName, htmlMaker)
                    // templateName : anything which can be used as map's key
                    // htmlMaker    : void   -> HTML string
                const Card = app.asTemplate(templateName, element)
                    // element      : HTMLElement
                app.$.append(Card(callback).$)
                    // callback     : SFNode, ... -> ?
            +codeBtn('/Repositories/JavaScript/SF/demo2.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo2.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo2.html', 'Open new tab')

            h3.marker Template Example 2 : Roman numeral calculator
            +codeBtn('/Repositories/JavaScript/SF/demo3.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo3.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo3.html', 'Open new tab')

        h2.marker Version 0.2.2
        div
            h3.marker Form Binding Example
            +asCode('javascript').
                const app = SF.build(document.getElementById('demo4-1'));
                const boundForm = SF.bindForm(app['demo4-1-form']);
            +codeBtn('/Repositories/JavaScript/SF/demo4.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo4.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo4.html', 'Open new tab')

            h3.marker Object Binding Example
            +asCode('javascript') SF.bindTwoWay(x, y);
            +codeBtn('/Repositories/JavaScript/SF/demo5.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo5.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo5.html', 'Open new tab')

        h2.marker Version 0.3.2
        div
            h3.marker DataGrid Example 1 : CSV. One data per one line.
            +asCode('javascript').
                SF.asDataGrid(csv);
                DataGrid.fromCSV(csv);
            +codeBtn('/Repositories/JavaScript/SF/demo6.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo6.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo6.html', 'Open new tab')
            
            h3.marker DataGrid Example 2 : CSV. Has multiple line quoted data.
            +codeBtn('/Repositories/JavaScript/SF/demo7.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo7.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo7.html', 'Open new tab')
            
            h3.marker DataGrid Example 3 : Array of Array, Array of Object
            +codeBtn('/Repositories/JavaScript/SF/demo8.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo8.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo8.html', 'Open new tab')
            
            h3.marker DataGrid Example 4 : Object of Array, Object of Object
            +codeBtn('/Repositories/JavaScript/SF/demo9.html', 'html')
            +codeBtn('/Repositories/JavaScript/SF/demo9.html', 'nohighlight') View live here
            +asA('/Repositories/JavaScript/SF/demo9.html', 'Open new tab')

    h1.marker Change Logs
    table
        tr
            th(pre-sort=1, sort-order='▲') version
            th category
            th detail
        tr
            td 0.1.3
            td Fix
            td
                | Solve ambiguous situation like below
                +asCode('javascript').
                    // Before
                    app.head[0].title = 'Welcome'               // 'title' attribute? or 'title' node?
                    // After
                    app.head[0].title = 'Welcome'               // 'title' attribute
                    app.head[0].$title[0].innerText = 'Welcome' // 'title' node
        tr
            td 0.1.1
            td Improve.
            td
                | If there's only one node with the specific node name, then return that node instead of array of children.
                +asCode('javascript').
                    // Before
                    app.head[0].$title[0].innerText = 'Welcome'
                    // After
                    app.head.$title.innerText = 'Welcome'
        +tds('0.1.2', 'New', 'Now app instance has "__isRoot" property as true')
        +tds('0.1.2', 'Remove', 'Removed callback parameter from SFNode.newTemplate, SFNode.asTemplate')
        +tds('0.1.2', 'Change', 'SFNode.asTemplate(String templateName, String id) → (String templateName, HTMLElement element)')
        +tds('0.1.2', 'Improve', 'When get a property from SFNode, do childNodes searching before calling querySelectorAll()')
        +tds('0.1.3', 'Fix', 'Renamed SF.map to SF.__map, SF.templates to SF.__templates')
        +tds('0.1.3', 'Remove', "Removed app instance's 'templates' property")
        +tds('0.2.0', 'Fix', 'Now SFNode can handle Symbol properties.')
        +tds('0.2.0', 'Change', "Startswith('__') properties changed to Symbols.")
        +tds('0.2.0', 'New', '4 kinds hooks : SF.beforePropertySet, SF.afterPropertySet, SF.beforePropertyDel, SF.afterPropertyDel')
        +tds('0.2.0', 'New', 'Form handling : SF.formToObject, SF.jsonToForm, SF.observeForm')
        +tds('0.2.0', 'New', 'Binding : SF.bindOneWay, SF.bindTwoWay, SF.bindForm')
        +tds('0.2.0', 'New', 'Higher-order function : SF.throttle, SF.debounce')
        +tds('0.2.1', 'Fix', 'Prevents running same hook at once')
        +tds('0.2.2', 'Fix', 'By misjudgement, had removed 0.1.1 fixed codes...')
        +tds('0.3.0', 'Fix', "Now function returned by SF.throttle, SF.debounce has it's own timer")
        +tds('0.3.0', 'New', 'DataGrid : SF.asDataGrid, DataGrid.fromCSV, DataGrid.fromArray, DataGrid.fromObject')
        +tds('0.3.2', 'Fix', 'CSV parsing error')
