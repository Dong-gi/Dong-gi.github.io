type:  -3, line:   1, string :import
type:  -3, line:   1, string :java.io.FileReader
type:  59, line:   1, special:;
type:  -3, line:   2, string :import
type:  -3, line:   2, string :java.io.StreamTokenizer
type:  59, line:   2, special:;
type:  -3, line:   4, string :public
type:  -3, line:   4, string :class
type:  -3, line:   4, string :StreamTokenizerExample
type: 123, line:   4, special:{
type:  -3, line:   6, string :public
type:  -3, line:   6, string :static
type:  -3, line:   6, string :void
type:  -3, line:   6, string :main
type:  40, line:   6, special:(
type:  -3, line:   6, string :String
type:  91, line:   6, special:[
type:  93, line:   6, special:]
type:  -3, line:   6, string :args
type:  41, line:   6, special:)
type:  -3, line:   6, string :throws
type:  -3, line:   6, string :Exception
type: 123, line:   6, special:{
type:  -3, line:   9, string :var
type:  -3, line:   9, string :t
type:  61, line:   9, special:=
type:  -3, line:   9, string :new
type:  -3, line:   9, string :StreamTokenizer
type:  40, line:   9, special:(
type:  -3, line:   9, string :new
type:  -3, line:   9, string :FileReader
type:  40, line:   9, special:(
type:  34, line:   9, special:"
type:  41, line:   9, special:)
type:  41, line:   9, special:)
type:  59, line:   9, special:;
type:  -3, line:  10, string :int
type:  -3, line:  10, string :type
type:  59, line:  10, special:;
type:  -3, line:  11, string :while
type:  40, line:  11, special:(
type:  -3, line:  11, string :true
type:  41, line:  11, special:)
type: 123, line:  11, special:{
type:  -3, line:  12, string :type
type:  61, line:  12, special:=
type:  -3, line:  12, string :t.nextToken
type:  40, line:  12, special:(
type:  41, line:  12, special:)
type:  59, line:  12, special:;
type:  -3, line:  13, string :if
type:  40, line:  13, special:(
type:  -3, line:  13, string :type
type:  61, line:  13, special:=
type:  61, line:  13, special:=
type:  -3, line:  13, string :StreamTokenizer.TT
type:  95, line:  13, special:_
type:  -3, line:  13, string :EOF
type:  41, line:  13, special:)
type:  -3, line:  13, string :break
type:  59, line:  13, special:;
type:  -3, line:  14, string :System.out.printf
type:  40, line:  14, special:(
type:  34, line:  14, special:"
type:  44, line:  14, special:,
type:  -3, line:  14, string :type
type:  44, line:  14, special:,
type:  -3, line:  14, string :t.lineno
type:  40, line:  14, special:(
type:  41, line:  14, special:)
type:  41, line:  14, special:)
type:  59, line:  14, special:;
type:  -3, line:  15, string :switch
type:  40, line:  15, special:(
type:  -3, line:  15, string :type
type:  41, line:  15, special:)
type: 123, line:  15, special:{
type:  -3, line:  16, string :case
type:  -3, line:  16, string :StreamTokenizer.TT
type:  95, line:  16, special:_
type:  -3, line:  16, string :EOL
type:  58, line:  16, special::
type:  -3, line:  17, string :System.out.println
type:  40, line:  17, special:(
type:  34, line:  17, special:"
type:  41, line:  17, special:)
type:  59, line:  17, special:;
type:  -3, line:  18, string :break
type:  59, line:  18, special:;
type:  -3, line:  19, string :case
type:  -3, line:  19, string :StreamTokenizer.TT
type:  95, line:  19, special:_
type:  -3, line:  19, string :NUMBER
type:  58, line:  19, special::
type:  -3, line:  20, string :System.out.println
type:  40, line:  20, special:(
type:  34, line:  20, special:"
type:  43, line:  20, special:+
type:  -3, line:  20, string :t.nval
type:  41, line:  20, special:)
type:  59, line:  20, special:;
type:  -3, line:  21, string :break
type:  59, line:  21, special:;
type:  -3, line:  22, string :case
type:  -3, line:  22, string :StreamTokenizer.TT
type:  95, line:  22, special:_
type:  -3, line:  22, string :WORD
type:  58, line:  22, special::
type:  -3, line:  23, string :System.out.println
type:  40, line:  23, special:(
type:  34, line:  23, special:"
type:  43, line:  23, special:+
type:  -3, line:  23, string :t.sval
type:  41, line:  23, special:)
type:  59, line:  23, special:;
type:  -3, line:  24, string :break
type:  59, line:  24, special:;
type:  -3, line:  25, string :default
type:  58, line:  25, special::
type:  -3, line:  26, string :System.out.println
type:  40, line:  26, special:(
type:  34, line:  26, special:"
type:  43, line:  26, special:+
type:  40, line:  26, special:(
type:  -3, line:  26, string :char
type:  41, line:  26, special:)
type:  -3, line:  26, string :type
type:  41, line:  26, special:)
type:  59, line:  26, special:;
type: 125, line:  27, special:}
type: 125, line:  28, special:}
type: 125, line:  29, special:}
type: 125, line:  31, special:}
