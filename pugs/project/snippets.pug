include ../../source/skeleton.pug

+post({
    title: 'Code Snippets',
    description: '코드 조각 모음',
})

    h1 언어 무관
    div
        details.marker
            summary 소수 찾기
            ul
                li 에라토스테네스의 체 : 
                    +codeBtn('/Repositories/Single/202202/FindPrime.java', 'java')
                li Library 지원
                +asCode('java').
                    var i = BigInteger.valueOf(10000000000000L);
                    for (var count = 0; count < 100; ++count) {
                        // 합성수일 가능성은 2^(-100)을 넘지 않는다
                        i = i.nextProbablePrime();
                        System.out.println(i);
                    }

        details.marker
            summary 양의 정수 n이 2의 거듭제곱인지 판별
            +asCode('java') (n &amp; (n - 1)) == 0

        details.marker
            summary 양의 정수 n, x에 대하여, 빠른 x % 2^n 계산
            ul
                li shift 연산 이용
                +asCode('java') x &lt;&lt; (32 - n) &gt;&gt;&gt; (32 - n)
                li and 연산 이용; (2^n - 1)는 사전에 계산되어 있어야 빠르다
                +asCode('java') x &amp; (2^n - 1)

        details.marker
            summary 한글 종성 구분
            ol
                li 한글은 0xAC00('가')부터 0xD7A3('힣')까지 총 11,172자가 정의
                li 11,172 = 초성 19 * 중성 21 * 종성 28(종성 없는 경우 포함)
                +asA('http://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt')
                li 코드 포인트 = (초성 인덱스 * 21 + 중성 인덱스) * 28 + 종성 인덱스 + '가'0xAC00
                ul
                    li (코드 포인트 - '가'0xAC00) % 28 = 종성 인덱스
                    li (코드 포인트 - 종성 인덱스 - '가'0xAC00) / 28 % 21 = 중성 인덱스
                    li ((코드 포인트 - 종성 인덱스 - '가'0xAC00) / 28 - 중성 인덱스) / 21 = 초성 인덱스
                li 조사 처리 예시 코드
                    +codeBtn('/Repositories/Eclipse/Basic/src/io/github/donggi/HangulUtility.java', 'java')

        details.marker
            summary year, month, day로부터 요일 구하기
            p
                +asA('https://cs.uwaterloo.ca/~alopez-o/math-faq/mathtext/node39.html', '출처')
                br
                |예. 2020년 2월 22일
            ul
                li d = 22 # 22일
                li m = 12 # 1(3월), 2(4월), ..., 12(2월)
                li c = 20 # year // 100
                li y = 19 # (year % 100), 1-2월이면 -1
                li w = (d + floor(2.6 * m - 0.2) - 2 * c + y + (y // 4) + (c // 4)) % 7
                p Week day : 0(일요일), 1(월요일), ..., 6(토요일)

    h1 AWS CloudWatch &gt; Logs Insights
    div
        details.marker
            summary JSON 프로퍼티 존재 여부 확인
            +asCode('sql').
                fields @timestamp, isPresent(detail.hpDiff) as isHp, isPresent(detail.mpDiff) as isMp
                | filter event = "battle-action"
                | stats sum(isHp) as hpChangedCount, sum(isMp) as mpChangedCount
        
        details.marker
            summary 정규식을 이용한 필드 추출
            p 아래 쿼리에서, abs()는 문자열을 숫자로 변환하기 위해 사용됨
            +asCode('sql').
                fields @timestamp, @message
                | filter @message like /SOME_TARGET_MESSAGE/
                | parse @message /"targetProperty":(?<targetCount>\d+)/
                | stats sum(abs(targetCount)) by bin(1h)

        details.marker
            summary GLOB 패턴을 이용한 필드 추출
            +asCode('sql').
                fields @timestamp, @message
                | parse @message "\"pid\":*," as pid
                | parse @message "\"url\":\"*\"" as url
                | display @timestamp, pid, url, @message
                | sort @timestamp desc
                | limit 10000

    h1 AWS S3
    ul
        li 공통 접두어 획득
        +asCode('shell') $ aws s3api list-objects-v2 --bucket BUCKET_NAME --delimiter / --query 'CommonPrefixes[].Prefix'
    div
        details.marker
            summary 삭제된 객체 복구
            ul
                li 버전 관리 활성화 필요함에 유의
                li 객체 삭제 마커를 삭제함으로써 객체를 복원한다
            +asCode('shell').
                # 삭제된 객체 목록 획득
                $ aws s3api list-object-versions --bucket BUCKET_NAME --prefix tmp/ --query 'DeleteMarkers[?IsLatest==`true`]'
                
                # 삭제된 객체 복구
                $ aws s3api list-object-versions --bucket BUCKET_NAME --prefix tmp/ --output json --query 'DeleteMarkers[?IsLatest==`true`].[Key, VersionId]' | jq -r '.[] | "--key '\''" + .[0] + "'\'' --version-id " + .[1]' | xargs -L1 aws s3api delete-object --bucket BUCKET_NAME

    h1 C#
    div
        details.marker
            summary Console Redirect
            +codeBtn('/Repositories/VisualStudio/CSharp/WpfDataTool/Utility/ConsoleRedirectWriter.cs', 'cs')

        details.marker
            summary Naive HTTP Server
            +codeBtn('/Repositories/VisualStudio/CSharp/WpfDataTool/Utility/NaiveHttpServer.cs', 'cs')

    h1 Google Apps Script
    div
        details.marker
            summary SpreadSheet
            +asCode('javascript').
                // 편집 이벤트 핸들러
                function onEdit(e) {
                    // 편집된 시트
                    e.source.getSheetName()
                    // 편집 영역
                    const [r, c, h, w] = [parseInt(e.range.getRow()), parseInt(e.range.getColumn()), parseInt(e.range.getHeight()), parseInt(e.range.getWidth())]
                }

                // 이름으로 시트 획득
                SpreadsheetApp.getActive().getSheetByName(name)
                
                // 스크립트 실행자가 활성화하고 있는 시트 획득
                SpreadsheetApp.getActiveSpreadsheet().getActiveSheet()
                // 시트 활성화
                sheet.activate()

    h1 Java
    div
        details.marker
            summary 파일명 일괄 변경
            +codeBtn('/Repositories/Single/202202/Rename.java', 'java')

    h1 JavaScript / TypeScript
    div
        details.marker
            summary CSV 파서
            +codeBtn('/Repositories/JavaScript/CSV/parseCSV.js', 'javascript')

        details.marker
            summary JSDoc으로부터 .d.ts 생성
            ul
                li 참고자료 : #[+asA('https://www.typescriptlang.org/ko/docs/handbook/declaration-files/dts-from-js.html')]
                +asCode('shell', 'CLI 실행 예시') npx typescript src/**/*.js --declaration --allowJs --emitDeclarationOnly --outDir dist/types

    h1 PostgreSQL
    div
        details.marker
            summary 시각 차이 획득
            +asCode('sql') select abs(extract (epoch from (insert_datetime - '2019-07-04 19:39:55'::timestamp)));

        details.marker
            summary 시간대 변경
            +asCode('sql').
                with tmp as (
                    select '2024-11-03 08:30:00'::timestamp t
                    union all
                    select '2024-11-03 09:30:00'::timestamp t
                )
                select
                    t,
                    t at time zone 'Asia/Seoul',
                    t at time zone 'America/Los_Angeles',
                    (t at time zone 'UTC') at time zone 'Asia/Seoul',
                    (t at time zone 'UTC') at time zone 'America/Los_Angeles'
                from tmp;
            +asCode('text', '결과').
                          t          |        timezone        |        timezone        |      timezone       |      timezone       
                ---------------------+------------------------+------------------------+---------------------+---------------------
                 2024-11-03 08:30:00 | 2024-11-02 23:30:00+00 | 2024-11-03 16:30:00+00 | 2024-11-03 17:30:00 | 2024-11-03 01:30:00
                 2024-11-03 09:30:00 | 2024-11-03 00:30:00+00 | 2024-11-03 17:30:00+00 | 2024-11-03 18:30:00 | 2024-11-03 01:30:00
                (2 rows)

        details.marker
            summary 테이블 기본 키 획득
            +asCode('sql').
                SELECT pg_attribute.attname as column FROM pg_index, pg_class, pg_attribute, pg_namespace
                WHERE
                    pg_class.oid = '{tableName}'::regclass AND
                    indrelid = pg_class.oid AND
                    nspname = 'public' AND
                    pg_class.relnamespace = pg_namespace.oid AND
                    pg_attribute.attrelid = pg_class.oid AND
                    pg_attribute.attnum = any(pg_index.indkey)
                AND indisprimary;

        details.marker
            summary 테이블 목록 획득
            +asCode('sql') select * from information_schema.tables

        details.marker
            summary 테이블 정보 획득
            +asCode('sql') select * from information_schema.columns where table_name = '{tableName}'

    h1 Shell
    div
        details.marker
            summary 세션 동안 SSH 인증 정보 기억하기
            ul
                li 참고자료 : #[+asA('https://gist.github.com/nepsilon/45fae11f8d173e3370c3')]
                +asCode('shell') $ ssh-add .ssh/my_key

    h1 Web(Browser)
    div
        details.marker
            summary 브라우저 매크로
            ul
                li https://www.steamgifts.com/
                p 게임 신청을 편리하게 하기 위한
                    +codeBtn('/Repositories/JavaScript/Browser/steamgifts.com.js', 'javascript') 스크립트

                li http://hiy9.net/ms-ost/
                    |메이플스토리 OST 다운로드
                    +codeBtn('/Repositories/JavaScript/Browser/hiy9.net.js', 'javascript') 스크립트

                li https://maplestory.fandom.com/wiki/Music
                    |메이플스토리 OST 다운로드
                    +codeBtn('/Repositories/JavaScript/Browser/maplestory.fandom.com.js', 'javascript') 스크립트

                li https://davidfennmusic.bandcamp.com/album/moonlighter
                    |플레이리스트 다운로드
                    +codeBtn('/Repositories/JavaScript/Browser/davidfennmusic.bandcamp.com.js', 'javascript') 스크립트

                li https://store.steampowered.com/
                    |스팀 게임 자동으로 "제외하기"
                    +codeBtn('/Repositories/JavaScript/Browser/store.steampowered.com.js', 'javascript') 스크립트

                li 핫딜 목록 정리 (추천수 5이상만 남기기)
                    +codeBtn('/Repositories/JavaScript/Browser/hot-deal.js', 'javascript') 북마클릿

        details.marker
            summary 이미지 인코딩/디코딩
            ol
                li 비트열 a, b에 대하여 (a ^ b) ^ b = a임을 이용
                li 인코딩 ::= 기존 데이터의 각 바이트에 대하여, data[i] ^= mask[i]
                li 디코딩 ::= 인코딩된 데이터 각 바이트에 대하여, data[i] ^= mask[i]
                li 따라서 XOR에 이용하는 mask만 정확히 재현할 수 있다면 빠르게 in-place 인코딩/디코딩이 가능하다
            ul
                li: +codeBtn('/Repositories/Single/202202/imageEncoding.html', 'nohighlight') View live here
                li
                    +codeBtn('/Repositories/Single/202202/imageEncoding.html', 'javascript', '[45,66]') encode()
                    +codeBtn('/Repositories/Single/202202/imageEncoding.html', 'javascript', '[68,87]') decode()

        details.marker
            summary 테이블 정렬
            +codeBtn('/Repositories/JavaScript/Browser/ordered-table.js', 'javascript')

