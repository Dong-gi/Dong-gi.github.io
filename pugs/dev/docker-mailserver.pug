include ../../source/skeleton.pug

+post({
    title: 'Docker Mailserver',
    description: 'docker-mailserver 설치 과정',
})

    h1 참고 문서
    ul
        li: +asA('https://docker-mailserver.github.io/docker-mailserver/edge/#getting-started')
        li: +asA('https://docker-mailserver.github.io/docker-mailserver/edge/introduction/')
        li: +asA('https://hub.docker.com/r/mailserver/docker-mailserver')

    h1 메일 서버 개요
    div
        p 이하에서 DMS는 Docker Mailserver 및 그 구성 요소를 의미함

        h2 구성 요소
        ul
            li MUA(Mail User Agent) : 이메일을 메일 서버로 보내는 클라이언트
            p 메일 서버로부터 이메일을 가져와 최종 사용자에게 보여주는 역할을 수행하기도 한다

            li MTA(Mail Transfer Agent) : 수신한 이메일의 최종 목적지가 자기 자신이라면 MDA에게 전달, 그렇지 않으면 다른 MTA에게 전달(중계)

            li MDA(Mail Delivery Agent) : 전달 받은 이메일을 수신자 메일함에 보관

        h2 행위
        ul
            li 제출(Submission) : MUA가 MTA에 새로운 이메일을 보냄
            li 전달(Transfer) : MTA가 다른 MTA로 이메일을 전달
            li 획득(Retrieval) : MUA가 MDA로부터 이메일을 획득
        +asCode().
              ┏━━━━━━━━━━ Submission ━━━━━━━━━━━━━┓┏━━━━━━━━━━━━━ Transfer/Relay ━━━━━━━━━━━┓

                                        ┌─────────────────────┐                    ┌┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┐
            MUA ----- STARTTLS -------> ┤(587)   MTA ╮    (25)├ <-- cleartext ---> ┊ Third-party MTA ┊
                ----- implicit TLS ---> ┤(465)       │        |                    └┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┘
                ----- cleartext ------> ┤(25)        │        |
                                        |┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄|
            MUA <---- STARTTLS -------- ┤(143)   MDA ╯        |
                <---- implicit TLS ---- ┤(993)                |
                                        └─────────────────────┘

              ┗━━━━━━━━━━ Retrieval ━━━━━━━━━━━━━━┛

        h2 프로토콜
        ul
            li Outbound Submission : 내가 누군가에게 이메일을 보내려는 경우
            p 465 포트에서 ESMTP 프로토콜을 통해해 암묵적 TLS 연결을 이용하는 것이 권장. 한편 기존 MUA들과의 호환성을 위해 587 포트에서 SMTP+STARTTLS 프로토콜을 통해 명시적 TLS 연결도 지원해야 한다.
            p DMS는 465 및 587 포트의 TLS 연결을 통해서만 MUA의 이메일 제출을 받으며, 그렇지 않은 메일은 거부한다.
            p 한편 DMS는 전통적인 25 포트를 이용한 암호화되지 않은 메일 전달(SMTP)을 계속 지원하지만, 이는 MTA 간의 중계를 위해서만 사용한다.

            li Inbound Submission : 외부 사용자가 내게 이메일을 보내려는 경우
            p 25 포트(SMTP)를 통해 수신

            li Retrieval - IMAP
            p DMS는 기본적으로 143 포트에서 IMAP+STARTTLS, 993 포트에서 IMAPS를 모두 활성화한다. 후자가 더 우수하지만, 호환성을 위해 전자도 이용.

            li Retrieval - POP3
            p IMAP보다 오래 전에 만들어진 POP3 프로토콜을 이용한 메일 획득도 있는데, DMS는 기본적으로 이를 비활성화한다.


    h1: +asA('https://docker-mailserver.github.io/docker-mailserver/latest/usage/', '설치 절차')
    ol
        li 설치 디렉터리에 다음 파일들 준비
        +asCode('shell').
            $ DMS_GITHUB_URL="https://raw.githubusercontent.com/docker-mailserver/docker-mailserver/master"
            $ wget "${DMS_GITHUB_URL}/compose.yaml"
            $ wget "${DMS_GITHUB_URL}/mailserver.env"
            # 구성 파일을 적절히 설정한 뒤 서버 실행
            $ docker compose up -d

        li 루트 이메일 계정 추가
        +asCode('shell').
            $ docker exec -it $CONTAINER_NAME setup email add wiz@4joy.link password
            $ docker exec -it $CONTAINER_NAME setup alias add postmaster@4joy.link wiz@4joy.link

        li DKIM 생성
        +asCode('shell') $ docker exec -it $CONTAINER_NAME setup config dkim
        p DMS 재시작하면 이후 발송되는 메일에 서명이 추가된다.
        p /tmp/docker-mailserver/에 생성된 공개키를 검증에 사용할 수 있도록 DNS 레코드로 등록.
        +asCode('txt', 'DKIM 예').
            mail._domainkey IN      TXT     ( "v=DKIM1; h=sha256; k=rsa; "
            "p=MIICIjANBgkqhkiG9...bcg9S8pPBMP6UvHja"
            "CfmAAKOPddfdWGpzg5V...lua+sZuXwaAqBWjo"
            "b3DXduFMNIqaQ4Mgqn/...ZbKskd9ZUCAwEAAQ==" )  ; ----- DKIM key mail for mail.4joy.link

        li DNS 설정
        table.w3-table-all.w3-card.w3-small
            +ths('레코드 이름', '유형', '값')
            +tds('4joy.link', 'MX', '1 mail.4joy.link')
            +tds('mail.4joy.link', 'A', 'xxx.xxx.xxx.xxx')
            tr
                td mail._domainkey.4joy.link
                td TXT
                td v=DKIM1; h=sha256; k=rsa; "<br>"p=MIICIjANBgh...g9S8pPBMP6UvHja"<br>"CfmAAKOPddf...sZuXwaAqBWjo"<br>"b3DXduFMNI...9ZUCAwEAAQ=="')
        p IP 소유자라면, PTR 레코드를 이용해 역방향 DNS 조회가 가능하도록 설정하는 것이 권장.
