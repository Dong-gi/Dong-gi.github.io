<Window x:Class="EventGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:viewmodel="clr-namespace:EventGenerator.ViewModel"
        mc:Ignorable="d"

        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"

        Title="통합 이벤트 생성기" Height="600" Width="1200" Icon="Resources/yellow.ico"
        AllowDrop="True" DragEnter="Window_DragEnter" Drop="Window_Drop">

    <Window.Resources>
        <Style x:Key="horizontalStackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="Margin" Value="2 0" />
            <EventSetter Event="PreviewDragOver" Handler="TextBox_PreviewDragOver" />
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="Margin" Value="3 0" />
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MaterialDesignLabel}">
            <Setter Property="Margin" Value="1 0" />
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border">
                                <ContentPresenter x:Name="ContentSite" ContentSource="Header" Margin="9 2" RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#00BCD4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Image x:Key="blueIcon" Source="Resources/blue.ico" />
        <Image x:Key="yellowIcon" Source="Resources/yellow.ico" />

        <viewmodel:MainViewModel x:Key="mainViewModel"/>
    </Window.Resources>

    <Window.DataContext>
        <Binding Source="{StaticResource mainViewModel}"/>
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <TabControl x:Name="MainTabControl" Grid.RowSpan="2">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Path=Commands[TAB_CHANGED_COMMAND]}" CommandParameter="{x:Reference MainTabControl}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TabItem>
                <TabItem.Header>
                    <StackPanel Height="24" Style="{StaticResource horizontalStackPanelStyle}">
                        <Image Source="Resources/yellow.png" />
                        <Label Content="MainTab1" FontWeight="Bold" />
                    </StackPanel>
                </TabItem.Header>
                <TabControl x:Name="Game1SubTabControl">
                    <TabItem Header="SubTab1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <GroupBox Header="파일 드래그앤 드롭" Grid.Row="1" MaxHeight="150">
                                <StackPanel VerticalAlignment="Center">
                                    <Label Content="아무 파일이나 드롭해보세요"/>
                                </StackPanel>
                            </GroupBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="SubTab2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="3*"/>
                            </Grid.RowDefinitions>
                            <GroupBox Header="Test" Grid.Row="0" MaxHeight="150">
                                <StackPanel VerticalAlignment="Center">
                                    <StackPanel Style="{StaticResource horizontalStackPanelStyle}">
                                        <Label Content="column1"/>
                                        <TextBox Text="{Binding IntParam1, UpdateSourceTrigger=PropertyChanged}"/>
                                        <Label Content="부터"/>
                                        <TextBox Text="{Binding IntParam2, UpdateSourceTrigger=PropertyChanged}"/>
                                        <Label Content="까지"/>
                                        <Button Content="검색">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=Game1.Commands[SEARCH_TABLE1_BY_COLUMN1_COMMAND]}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <CheckBox Content="현재 목록에 추가" IsChecked="{Binding IsAddCurrent}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource horizontalStackPanelStyle}">
                                        <Label Content="column2(yyyy-MM-dd)"/>
                                        <TextBox Text="{Binding DateParam1, UpdateSourceTrigger=PropertyChanged}" KeyUp="DateTextBox_KeyUp"/>
                                        <Label Content="부터"/>
                                        <TextBox Text="{Binding DateParam2, UpdateSourceTrigger=PropertyChanged}" KeyUp="DateTextBox_KeyUp"/>
                                        <Label Content="까지"/>
                                        <Button Content="검색">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=Game1.Commands[SEARCH_TABLE1_BY_COLUMN2_COMMAND]}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button Content="생성">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=Game1.Commands[MAKE_TABLE1_COMMAND]}" CommandParameter="{x:Reference Game1Table1DataGrid}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <Label Grid.Row="1" Content="↓ Ctrl, Shift, Delete, 드래그 등으로 생성할 행 선택"/>
                            <DataGrid x:Name="Game1Table1DataGrid" Grid.Row="2" ItemsSource="{Binding Game1.Data1}"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Height="24" Style="{StaticResource horizontalStackPanelStyle}">
                        <Image Source="Resources/blue.png" />
                        <Label Content="MainTab2" FontWeight="Bold" />
                    </StackPanel>
                </TabItem.Header>
                <TabControl x:Name="Game2SubTabControl">
                    <TabItem>
                        <TabItem.Header>유틸리티</TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="2*"/>
                            </Grid.RowDefinitions>
                            <GroupBox Header="파일 드랍 이벤트 처리">
                                <StackPanel VerticalAlignment="Center">
                                    <Label Content="이용 방법 : 모드 변경 후 변환할 파일 드래그-앤-드롭"/>
                                    <StackPanel Style="{StaticResource horizontalStackPanelStyle}">
                                        <RadioButton GroupName="FileDropMode" IsChecked="{Binding Game2.ImageOptimize}" Content="이미지 압축 "/>
                                        <RadioButton GroupName="FileDropMode" IsChecked="{Binding Game2.CsvToXlsx}" Content=".csv to .xlsx "/>
                                        <RadioButton GroupName="FileDropMode" IsChecked="{Binding Game2.XlsxToXls}" Content=".xlsx to .xls "/>
                                        <RadioButton GroupName="FileDropMode" IsChecked="{Binding Game2.MergeSheets}" Content="엑셀 합치기 "/>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Single Action" Grid.Row="1">
                                <StackPanel Style="{StaticResource horizontalStackPanelStyle}">
                                    <Button Content="EXCEL.EXE 프로세스 전체 종료">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding Path=Game2.Commands[QUIT_EXCEL_COMMAND]}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="기타 기능" Grid.Row="2">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Style="{StaticResource horizontalStackPanelStyle}" Margin="0 6">
                                        <Button Content="SSH 예시">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=Game2.Commands[SSH_EXAMPLE_COMMAND]}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button Content="AWS 캐시 클리어 예시">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=Game2.Commands[AWS_CLOUD_FRONT_INVALIDATION_COPY_COMMAND]}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>

        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="실행 폴더 열기">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Path=Commands[OPEN_EXECUTING_FORDER_COMMAND]}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Label Content="↓ 로그" VerticalAlignment="Center" FontWeight="Bold"/>
            <Button Content="업데이트">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Path=Commands[UPDATE_COMMAND]}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <ComboBox x:Name="DBServerComboBox" MinWidth="130" ItemsSource="{Binding DBServers}" SelectedItem="{Binding CurrentDBServer}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Bold" SelectedIndex="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding Path=Commands[DB_SERVER_CHANGED_COMMAND]}" CommandParameter="{x:Reference DBServerComboBox}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </StackPanel>
        <TextBox x:Name="LogTextBox" Text="{Binding LogText, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2" IsReadOnly="True" AllowDrop="True" PreviewDragOver="TextBox_PreviewDragOver" />
    </Grid>
</Window>
